; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\tim.o --asm_dir=.\OBJ\ --list_dir=.\OBJ\ --depend=.\obj\tim.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\CORE -I.\USER -I.\HALLIB\STM32F4xx_HAL_Driver\Inc -I.\SYSTEM -I.\Hardware -I.\App -I.\DSP_LIB\Include -I.\FreeRTOS -I.\MPU9250\DMP -I.\MPU9250 -I.\RTE\_Project -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=526 -DSTM32F427xx -DSTM32F4 -DUSE_HAL_DRIVER -DSTM32F427xx -DARM_MATH_CM4 -D__CC_ARM -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING -DMPL_LOG_NDEBUG=1 -DEMPL -DMPU9250 -DEMPL_TARGET_STM32F4 --omf_browse=.\obj\tim.crf Hardware\TIM.c]
                          THUMB

                          AREA ||i.HAL_TIM_MspPostInit||, CODE, READONLY, ALIGN=2

                  HAL_TIM_MspPostInit PROC
;;;135    }
;;;136    void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
000000  b510              PUSH     {r4,lr}
;;;137    {
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;138    
;;;139      GPIO_InitTypeDef GPIO_InitStruct;
;;;140      if(timHandle->Instance==TIM2)
000006  6820              LDR      r0,[r4,#0]
000008  f1b04f80          CMP      r0,#0x40000000
00000c  d11d              BNE      |L1.74|
;;;141      {
;;;142    		__HAL_RCC_GPIOA_CLK_ENABLE();
00000e  bf00              NOP      
000010  2000              MOVS     r0,#0
000012  9000              STR      r0,[sp,#0]
000014  484f              LDR      r0,|L1.340|
000016  6800              LDR      r0,[r0,#0]
000018  f0400001          ORR      r0,r0,#1
00001c  494d              LDR      r1,|L1.340|
00001e  6008              STR      r0,[r1,#0]
000020  4608              MOV      r0,r1
000022  6800              LDR      r0,[r0,#0]
000024  f0000001          AND      r0,r0,#1
000028  9000              STR      r0,[sp,#0]
00002a  bf00              NOP      
00002c  bf00              NOP      
;;;143        GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_3;
00002e  200f              MOVS     r0,#0xf
000030  9001              STR      r0,[sp,#4]
;;;144        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
000032  2002              MOVS     r0,#2
000034  9002              STR      r0,[sp,#8]
;;;145        GPIO_InitStruct.Pull = GPIO_NOPULL;
000036  2000              MOVS     r0,#0
000038  9003              STR      r0,[sp,#0xc]
;;;146        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
00003a  9004              STR      r0,[sp,#0x10]
;;;147        GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
00003c  2001              MOVS     r0,#1
00003e  9005              STR      r0,[sp,#0x14]
;;;148        HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
000040  a901              ADD      r1,sp,#4
000042  4845              LDR      r0,|L1.344|
000044  f7fffffe          BL       HAL_GPIO_Init
000048  e082              B        |L1.336|
                  |L1.74|
;;;149      }
;;;150      else if(timHandle->Instance==TIM4)
00004a  4944              LDR      r1,|L1.348|
00004c  6820              LDR      r0,[r4,#0]
00004e  4288              CMP      r0,r1
000050  d11e              BNE      |L1.144|
;;;151      {
;;;152    		__HAL_RCC_GPIOD_CLK_ENABLE();
000052  bf00              NOP      
000054  2000              MOVS     r0,#0
000056  9000              STR      r0,[sp,#0]
000058  483e              LDR      r0,|L1.340|
00005a  6800              LDR      r0,[r0,#0]
00005c  f0400008          ORR      r0,r0,#8
000060  493c              LDR      r1,|L1.340|
000062  6008              STR      r0,[r1,#0]
000064  4608              MOV      r0,r1
000066  6800              LDR      r0,[r0,#0]
000068  f0000008          AND      r0,r0,#8
00006c  9000              STR      r0,[sp,#0]
00006e  bf00              NOP      
000070  bf00              NOP      
;;;153        GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_13|GPIO_PIN_12;
000072  f44f4070          MOV      r0,#0xf000
000076  9001              STR      r0,[sp,#4]
;;;154        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
000078  2002              MOVS     r0,#2
00007a  9002              STR      r0,[sp,#8]
;;;155        GPIO_InitStruct.Pull = GPIO_NOPULL;
00007c  2000              MOVS     r0,#0
00007e  9003              STR      r0,[sp,#0xc]
;;;156        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
000080  9004              STR      r0,[sp,#0x10]
;;;157        GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
000082  2002              MOVS     r0,#2
000084  9005              STR      r0,[sp,#0x14]
;;;158        HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
000086  a901              ADD      r1,sp,#4
000088  4835              LDR      r0,|L1.352|
00008a  f7fffffe          BL       HAL_GPIO_Init
00008e  e05f              B        |L1.336|
                  |L1.144|
;;;159      }
;;;160      else if(timHandle->Instance==TIM5)
000090  4934              LDR      r1,|L1.356|
000092  6820              LDR      r0,[r4,#0]
000094  4288              CMP      r0,r1
000096  d13a              BNE      |L1.270|
;;;161      {
;;;162    		__HAL_RCC_GPIOH_CLK_ENABLE();
000098  bf00              NOP      
00009a  2000              MOVS     r0,#0
00009c  9000              STR      r0,[sp,#0]
00009e  482d              LDR      r0,|L1.340|
0000a0  6800              LDR      r0,[r0,#0]
0000a2  f0400080          ORR      r0,r0,#0x80
0000a6  492b              LDR      r1,|L1.340|
0000a8  6008              STR      r0,[r1,#0]
0000aa  4608              MOV      r0,r1
0000ac  6800              LDR      r0,[r0,#0]
0000ae  f0000080          AND      r0,r0,#0x80
0000b2  9000              STR      r0,[sp,#0]
0000b4  bf00              NOP      
0000b6  bf00              NOP      
;;;163    		__HAL_RCC_GPIOI_CLK_ENABLE();
0000b8  bf00              NOP      
0000ba  2000              MOVS     r0,#0
0000bc  9000              STR      r0,[sp,#0]
0000be  4608              MOV      r0,r1
0000c0  6800              LDR      r0,[r0,#0]
0000c2  f4407080          ORR      r0,r0,#0x100
0000c6  6008              STR      r0,[r1,#0]
0000c8  4608              MOV      r0,r1
0000ca  6800              LDR      r0,[r0,#0]
0000cc  f4007080          AND      r0,r0,#0x100
0000d0  9000              STR      r0,[sp,#0]
0000d2  bf00              NOP      
0000d4  bf00              NOP      
;;;164        GPIO_InitStruct.Pin = GPIO_PIN_0;
0000d6  2001              MOVS     r0,#1
0000d8  9001              STR      r0,[sp,#4]
;;;165        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
0000da  2002              MOVS     r0,#2
0000dc  9002              STR      r0,[sp,#8]
;;;166        GPIO_InitStruct.Pull = GPIO_NOPULL;
0000de  2000              MOVS     r0,#0
0000e0  9003              STR      r0,[sp,#0xc]
;;;167        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
0000e2  9004              STR      r0,[sp,#0x10]
;;;168        GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
0000e4  2002              MOVS     r0,#2
0000e6  9005              STR      r0,[sp,#0x14]
;;;169        HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
0000e8  a901              ADD      r1,sp,#4
0000ea  481f              LDR      r0,|L1.360|
0000ec  f7fffffe          BL       HAL_GPIO_Init
;;;170        GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_11|GPIO_PIN_10;
0000f0  f44f50e0          MOV      r0,#0x1c00
0000f4  9001              STR      r0,[sp,#4]
;;;171        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
0000f6  2002              MOVS     r0,#2
0000f8  9002              STR      r0,[sp,#8]
;;;172        GPIO_InitStruct.Pull = GPIO_NOPULL;
0000fa  2000              MOVS     r0,#0
0000fc  9003              STR      r0,[sp,#0xc]
;;;173        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
0000fe  9004              STR      r0,[sp,#0x10]
;;;174        GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
000100  2002              MOVS     r0,#2
000102  9005              STR      r0,[sp,#0x14]
;;;175        HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
000104  a901              ADD      r1,sp,#4
000106  4819              LDR      r0,|L1.364|
000108  f7fffffe          BL       HAL_GPIO_Init
00010c  e020              B        |L1.336|
                  |L1.270|
;;;176      }
;;;177      else if(timHandle->Instance==TIM8)
00010e  4918              LDR      r1,|L1.368|
000110  6820              LDR      r0,[r4,#0]
000112  4288              CMP      r0,r1
000114  d11c              BNE      |L1.336|
;;;178      {
;;;179    		__HAL_RCC_GPIOI_CLK_ENABLE();
000116  bf00              NOP      
000118  2000              MOVS     r0,#0
00011a  9000              STR      r0,[sp,#0]
00011c  480d              LDR      r0,|L1.340|
00011e  6800              LDR      r0,[r0,#0]
000120  f4407080          ORR      r0,r0,#0x100
000124  490b              LDR      r1,|L1.340|
000126  6008              STR      r0,[r1,#0]
000128  4608              MOV      r0,r1
00012a  6800              LDR      r0,[r0,#0]
00012c  f4007080          AND      r0,r0,#0x100
000130  9000              STR      r0,[sp,#0]
000132  bf00              NOP      
000134  bf00              NOP      
;;;180        GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_5|GPIO_PIN_2;
000136  20e4              MOVS     r0,#0xe4
000138  9001              STR      r0,[sp,#4]
;;;181        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
00013a  2002              MOVS     r0,#2
00013c  9002              STR      r0,[sp,#8]
;;;182        GPIO_InitStruct.Pull = GPIO_NOPULL;
00013e  2000              MOVS     r0,#0
000140  9003              STR      r0,[sp,#0xc]
;;;183        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
000142  9004              STR      r0,[sp,#0x10]
;;;184        GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
000144  2003              MOVS     r0,#3
000146  9005              STR      r0,[sp,#0x14]
;;;185        HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
000148  a901              ADD      r1,sp,#4
00014a  4807              LDR      r0,|L1.360|
00014c  f7fffffe          BL       HAL_GPIO_Init
                  |L1.336|
;;;186      }
;;;187    }
000150  b006              ADD      sp,sp,#0x18
000152  bd10              POP      {r4,pc}
;;;188    
                          ENDP

                  |L1.340|
                          DCD      0x40023830
                  |L1.344|
                          DCD      0x40020000
                  |L1.348|
                          DCD      0x40000800
                  |L1.352|
                          DCD      0x40020c00
                  |L1.356|
                          DCD      0x40000c00
                  |L1.360|
                          DCD      0x40022000
                  |L1.364|
                          DCD      0x40021c00
                  |L1.368|
                          DCD      0x40010400

                          AREA ||i.HAL_TIM_PWM_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_TIM_PWM_MspDeInit PROC
;;;188    
;;;189    void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef* tim_pwmHandle)
000000  6801              LDR      r1,[r0,#0]
;;;190    {
;;;191    
;;;192      if(tim_pwmHandle->Instance==TIM2)
000002  f1b14f80          CMP      r1,#0x40000000
000006  d106              BNE      |L2.22|
;;;193      {
;;;194        __HAL_RCC_TIM2_CLK_DISABLE();
000008  4914              LDR      r1,|L2.92|
00000a  6809              LDR      r1,[r1,#0]
00000c  f0210101          BIC      r1,r1,#1
000010  4a12              LDR      r2,|L2.92|
000012  6011              STR      r1,[r2,#0]
000014  e021              B        |L2.90|
                  |L2.22|
;;;195      }
;;;196      else if(tim_pwmHandle->Instance==TIM4)
000016  4a12              LDR      r2,|L2.96|
000018  6801              LDR      r1,[r0,#0]
00001a  4291              CMP      r1,r2
00001c  d106              BNE      |L2.44|
;;;197      {
;;;198        __HAL_RCC_TIM4_CLK_DISABLE();
00001e  490f              LDR      r1,|L2.92|
000020  6809              LDR      r1,[r1,#0]
000022  f0210104          BIC      r1,r1,#4
000026  4a0d              LDR      r2,|L2.92|
000028  6011              STR      r1,[r2,#0]
00002a  e016              B        |L2.90|
                  |L2.44|
;;;199      }
;;;200      else if(tim_pwmHandle->Instance==TIM5)
00002c  4a0d              LDR      r2,|L2.100|
00002e  6801              LDR      r1,[r0,#0]
000030  4291              CMP      r1,r2
000032  d106              BNE      |L2.66|
;;;201      {
;;;202        __HAL_RCC_TIM5_CLK_DISABLE();
000034  4909              LDR      r1,|L2.92|
000036  6809              LDR      r1,[r1,#0]
000038  f0210108          BIC      r1,r1,#8
00003c  4a07              LDR      r2,|L2.92|
00003e  6011              STR      r1,[r2,#0]
000040  e00b              B        |L2.90|
                  |L2.66|
;;;203      }
;;;204      else if(tim_pwmHandle->Instance==TIM8)
000042  4a09              LDR      r2,|L2.104|
000044  6801              LDR      r1,[r0,#0]
000046  4291              CMP      r1,r2
000048  d107              BNE      |L2.90|
;;;205      {
;;;206        __HAL_RCC_TIM8_CLK_DISABLE();
00004a  4904              LDR      r1,|L2.92|
00004c  1d09              ADDS     r1,r1,#4
00004e  6809              LDR      r1,[r1,#0]
000050  f0210102          BIC      r1,r1,#2
000054  4a01              LDR      r2,|L2.92|
000056  1d12              ADDS     r2,r2,#4
000058  6011              STR      r1,[r2,#0]
                  |L2.90|
;;;207      }
;;;208    } 
00005a  4770              BX       lr
;;;209    
                          ENDP

                  |L2.92|
                          DCD      0x40023840
                  |L2.96|
                          DCD      0x40000800
                  |L2.100|
                          DCD      0x40000c00
                  |L2.104|
                          DCD      0x40010400

                          AREA ||i.HAL_TIM_PWM_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_TIM_PWM_MspInit PROC
;;;116    
;;;117    void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
000000  b508              PUSH     {r3,lr}
;;;118    {
;;;119      if(tim_pwmHandle->Instance==TIM2)
000002  6801              LDR      r1,[r0,#0]
000004  f1b14f80          CMP      r1,#0x40000000
000008  d10f              BNE      |L3.42|
;;;120      {
;;;121        __HAL_RCC_TIM2_CLK_ENABLE();
00000a  bf00              NOP      
00000c  2100              MOVS     r1,#0
00000e  9100              STR      r1,[sp,#0]
000010  4925              LDR      r1,|L3.168|
000012  6809              LDR      r1,[r1,#0]
000014  f0410101          ORR      r1,r1,#1
000018  4a23              LDR      r2,|L3.168|
00001a  6011              STR      r1,[r2,#0]
00001c  4611              MOV      r1,r2
00001e  6809              LDR      r1,[r1,#0]
000020  f0010101          AND      r1,r1,#1
000024  9100              STR      r1,[sp,#0]
000026  bf00              NOP      
000028  e03d              B        |L3.166|
                  |L3.42|
;;;122      }
;;;123      else if(tim_pwmHandle->Instance==TIM4)
00002a  4a20              LDR      r2,|L3.172|
00002c  6801              LDR      r1,[r0,#0]
00002e  4291              CMP      r1,r2
000030  d10f              BNE      |L3.82|
;;;124      {
;;;125        __HAL_RCC_TIM4_CLK_ENABLE();
000032  bf00              NOP      
000034  2100              MOVS     r1,#0
000036  9100              STR      r1,[sp,#0]
000038  491b              LDR      r1,|L3.168|
00003a  6809              LDR      r1,[r1,#0]
00003c  f0410104          ORR      r1,r1,#4
000040  4a19              LDR      r2,|L3.168|
000042  6011              STR      r1,[r2,#0]
000044  4611              MOV      r1,r2
000046  6809              LDR      r1,[r1,#0]
000048  f0010104          AND      r1,r1,#4
00004c  9100              STR      r1,[sp,#0]
00004e  bf00              NOP      
000050  e029              B        |L3.166|
                  |L3.82|
;;;126      }
;;;127      else if(tim_pwmHandle->Instance==TIM5)
000052  4a17              LDR      r2,|L3.176|
000054  6801              LDR      r1,[r0,#0]
000056  4291              CMP      r1,r2
000058  d10f              BNE      |L3.122|
;;;128      {
;;;129        __HAL_RCC_TIM5_CLK_ENABLE();
00005a  bf00              NOP      
00005c  2100              MOVS     r1,#0
00005e  9100              STR      r1,[sp,#0]
000060  4911              LDR      r1,|L3.168|
000062  6809              LDR      r1,[r1,#0]
000064  f0410108          ORR      r1,r1,#8
000068  4a0f              LDR      r2,|L3.168|
00006a  6011              STR      r1,[r2,#0]
00006c  4611              MOV      r1,r2
00006e  6809              LDR      r1,[r1,#0]
000070  f0010108          AND      r1,r1,#8
000074  9100              STR      r1,[sp,#0]
000076  bf00              NOP      
000078  e015              B        |L3.166|
                  |L3.122|
;;;130      }
;;;131      else if(tim_pwmHandle->Instance==TIM8)
00007a  4a0e              LDR      r2,|L3.180|
00007c  6801              LDR      r1,[r0,#0]
00007e  4291              CMP      r1,r2
000080  d111              BNE      |L3.166|
;;;132      {
;;;133        __HAL_RCC_TIM8_CLK_ENABLE();
000082  bf00              NOP      
000084  2100              MOVS     r1,#0
000086  9100              STR      r1,[sp,#0]
000088  4907              LDR      r1,|L3.168|
00008a  1d09              ADDS     r1,r1,#4
00008c  6809              LDR      r1,[r1,#0]
00008e  f0410102          ORR      r1,r1,#2
000092  4a05              LDR      r2,|L3.168|
000094  1d12              ADDS     r2,r2,#4
000096  6011              STR      r1,[r2,#0]
000098  4611              MOV      r1,r2
00009a  6809              LDR      r1,[r1,#0]
00009c  f0010102          AND      r1,r1,#2
0000a0  9100              STR      r1,[sp,#0]
0000a2  bf00              NOP      
0000a4  bf00              NOP      
                  |L3.166|
;;;134      }
;;;135    }
0000a6  bd08              POP      {r3,pc}
;;;136    void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
                          ENDP

                  |L3.168|
                          DCD      0x40023840
                  |L3.172|
                          DCD      0x40000800
                  |L3.176|
                          DCD      0x40000c00
                  |L3.180|
                          DCD      0x40010400

                          AREA ||i.MX_TIM2_Init||, CODE, READONLY, ALIGN=2

                  MX_TIM2_Init PROC
;;;8      TIM_HandleTypeDef htim8;
;;;9      void MX_TIM2_Init(void)
000000  b500              PUSH     {lr}
;;;10     {
000002  b089              SUB      sp,sp,#0x24
;;;11       TIM_MasterConfigTypeDef sMasterConfig;
;;;12       TIM_OC_InitTypeDef sConfigOC;
;;;13       htim2.Instance = TIM2;
000004  f04f4080          MOV      r0,#0x40000000
000008  491a              LDR      r1,|L4.116|
00000a  6008              STR      r0,[r1,#0]  ; htim2
;;;14       htim2.Init.Prescaler = TIM_PSC_APB1;
00000c  20c7              MOVS     r0,#0xc7
00000e  6048              STR      r0,[r1,#4]  ; htim2
;;;15       htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
000010  2100              MOVS     r1,#0
000012  4818              LDR      r0,|L4.116|
000014  6081              STR      r1,[r0,#8]
;;;16       htim2.Init.Period = PWM_RESOLUTION-1;
000016  f2423127          MOV      r1,#0x2327
00001a  60c1              STR      r1,[r0,#0xc]
;;;17       htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
00001c  2100              MOVS     r1,#0
00001e  6101              STR      r1,[r0,#0x10]
;;;18       HAL_TIM_PWM_Init(&htim2);
000020  f7fffffe          BL       HAL_TIM_PWM_Init
;;;19       sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
000024  2000              MOVS     r0,#0
000026  9007              STR      r0,[sp,#0x1c]
;;;20       sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
000028  9008              STR      r0,[sp,#0x20]
;;;21       HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig);
00002a  a907              ADD      r1,sp,#0x1c
00002c  4811              LDR      r0,|L4.116|
00002e  f7fffffe          BL       HAL_TIMEx_MasterConfigSynchronization
;;;22       sConfigOC.OCMode = TIM_OCMODE_PWM1;
000032  2060              MOVS     r0,#0x60
000034  9000              STR      r0,[sp,#0]
;;;23       sConfigOC.Pulse = PWM_DEFAULT_DUTY;
000036  f2413088          MOV      r0,#0x1388
00003a  9001              STR      r0,[sp,#4]
;;;24       sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
00003c  2000              MOVS     r0,#0
00003e  9002              STR      r0,[sp,#8]
;;;25       sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
000040  9004              STR      r0,[sp,#0x10]
;;;26       HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1);
000042  2200              MOVS     r2,#0
000044  4669              MOV      r1,sp
000046  480b              LDR      r0,|L4.116|
000048  f7fffffe          BL       HAL_TIM_PWM_ConfigChannel
;;;27       HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2);
00004c  2204              MOVS     r2,#4
00004e  4669              MOV      r1,sp
000050  4808              LDR      r0,|L4.116|
000052  f7fffffe          BL       HAL_TIM_PWM_ConfigChannel
;;;28       HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3);
000056  2208              MOVS     r2,#8
000058  4669              MOV      r1,sp
00005a  4806              LDR      r0,|L4.116|
00005c  f7fffffe          BL       HAL_TIM_PWM_ConfigChannel
;;;29       HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4);
000060  220c              MOVS     r2,#0xc
000062  4669              MOV      r1,sp
000064  4803              LDR      r0,|L4.116|
000066  f7fffffe          BL       HAL_TIM_PWM_ConfigChannel
;;;30       HAL_TIM_MspPostInit(&htim2);
00006a  4802              LDR      r0,|L4.116|
00006c  f7fffffe          BL       HAL_TIM_MspPostInit
;;;31     }
000070  b009              ADD      sp,sp,#0x24
000072  bd00              POP      {pc}
;;;32     void MX_TIM4_Init(void)
                          ENDP

                  |L4.116|
                          DCD      htim2

                          AREA ||i.MX_TIM4_Init||, CODE, READONLY, ALIGN=2

                  MX_TIM4_Init PROC
;;;31     }
;;;32     void MX_TIM4_Init(void)
000000  b500              PUSH     {lr}
;;;33     {
000002  b089              SUB      sp,sp,#0x24
;;;34       TIM_MasterConfigTypeDef sMasterConfig;
;;;35       TIM_OC_InitTypeDef sConfigOC;
;;;36       htim4.Instance = TIM4;
000004  481b              LDR      r0,|L5.116|
000006  491c              LDR      r1,|L5.120|
000008  6008              STR      r0,[r1,#0]  ; htim4
;;;37       htim4.Init.Prescaler = TIM_PSC_APB1;
00000a  20c7              MOVS     r0,#0xc7
00000c  6048              STR      r0,[r1,#4]  ; htim4
;;;38       htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
00000e  2100              MOVS     r1,#0
000010  4819              LDR      r0,|L5.120|
000012  6081              STR      r1,[r0,#8]
;;;39       htim4.Init.Period = PWM_RESOLUTION-1;
000014  f2423127          MOV      r1,#0x2327
000018  60c1              STR      r1,[r0,#0xc]
;;;40       htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
00001a  2100              MOVS     r1,#0
00001c  6101              STR      r1,[r0,#0x10]
;;;41       HAL_TIM_PWM_Init(&htim4);
00001e  f7fffffe          BL       HAL_TIM_PWM_Init
;;;42       sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
000022  2000              MOVS     r0,#0
000024  9007              STR      r0,[sp,#0x1c]
;;;43       sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
000026  9008              STR      r0,[sp,#0x20]
;;;44       HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig);
000028  a907              ADD      r1,sp,#0x1c
00002a  4813              LDR      r0,|L5.120|
00002c  f7fffffe          BL       HAL_TIMEx_MasterConfigSynchronization
;;;45       sConfigOC.OCMode = TIM_OCMODE_PWM1;
000030  2060              MOVS     r0,#0x60
000032  9000              STR      r0,[sp,#0]
;;;46       sConfigOC.Pulse = PWM_DEFAULT_DUTY;
000034  f2413088          MOV      r0,#0x1388
000038  9001              STR      r0,[sp,#4]
;;;47       sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
00003a  2000              MOVS     r0,#0
00003c  9002              STR      r0,[sp,#8]
;;;48       sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
00003e  9004              STR      r0,[sp,#0x10]
;;;49       HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1);
000040  2200              MOVS     r2,#0
000042  4669              MOV      r1,sp
000044  480c              LDR      r0,|L5.120|
000046  f7fffffe          BL       HAL_TIM_PWM_ConfigChannel
;;;50       HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_2) ;
00004a  2204              MOVS     r2,#4
00004c  4669              MOV      r1,sp
00004e  480a              LDR      r0,|L5.120|
000050  f7fffffe          BL       HAL_TIM_PWM_ConfigChannel
;;;51       HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_3) ;
000054  2208              MOVS     r2,#8
000056  4669              MOV      r1,sp
000058  4807              LDR      r0,|L5.120|
00005a  f7fffffe          BL       HAL_TIM_PWM_ConfigChannel
;;;52       HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_4);
00005e  220c              MOVS     r2,#0xc
000060  4669              MOV      r1,sp
000062  4805              LDR      r0,|L5.120|
000064  f7fffffe          BL       HAL_TIM_PWM_ConfigChannel
;;;53       HAL_TIM_MspPostInit(&htim4);
000068  4803              LDR      r0,|L5.120|
00006a  f7fffffe          BL       HAL_TIM_MspPostInit
;;;54     
;;;55     }
00006e  b009              ADD      sp,sp,#0x24
000070  bd00              POP      {pc}
;;;56     void MX_TIM5_Init(void)
                          ENDP

000072  0000              DCW      0x0000
                  |L5.116|
                          DCD      0x40000800
                  |L5.120|
                          DCD      htim4

                          AREA ||i.MX_TIM5_Init||, CODE, READONLY, ALIGN=2

                  MX_TIM5_Init PROC
;;;55     }
;;;56     void MX_TIM5_Init(void)
000000  b500              PUSH     {lr}
;;;57     {
000002  b089              SUB      sp,sp,#0x24
;;;58       TIM_MasterConfigTypeDef sMasterConfig;
;;;59       TIM_OC_InitTypeDef sConfigOC;
;;;60       htim5.Instance = TIM5;
000004  481b              LDR      r0,|L6.116|
000006  491c              LDR      r1,|L6.120|
000008  6008              STR      r0,[r1,#0]  ; htim5
;;;61       htim5.Init.Prescaler = TIM_PSC_APB1;
00000a  20c7              MOVS     r0,#0xc7
00000c  6048              STR      r0,[r1,#4]  ; htim5
;;;62       htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
00000e  2100              MOVS     r1,#0
000010  4819              LDR      r0,|L6.120|
000012  6081              STR      r1,[r0,#8]
;;;63       htim5.Init.Period = PWM_RESOLUTION-1;
000014  f2423127          MOV      r1,#0x2327
000018  60c1              STR      r1,[r0,#0xc]
;;;64       htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
00001a  2100              MOVS     r1,#0
00001c  6101              STR      r1,[r0,#0x10]
;;;65       HAL_TIM_PWM_Init(&htim5);
00001e  f7fffffe          BL       HAL_TIM_PWM_Init
;;;66       sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
000022  2000              MOVS     r0,#0
000024  9007              STR      r0,[sp,#0x1c]
;;;67       sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
000026  9008              STR      r0,[sp,#0x20]
;;;68     	HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig);
000028  a907              ADD      r1,sp,#0x1c
00002a  4813              LDR      r0,|L6.120|
00002c  f7fffffe          BL       HAL_TIMEx_MasterConfigSynchronization
;;;69       sConfigOC.OCMode = TIM_OCMODE_PWM1;
000030  2060              MOVS     r0,#0x60
000032  9000              STR      r0,[sp,#0]
;;;70       sConfigOC.Pulse = PWM_DEFAULT_DUTY;
000034  f2413088          MOV      r0,#0x1388
000038  9001              STR      r0,[sp,#4]
;;;71       sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
00003a  2000              MOVS     r0,#0
00003c  9002              STR      r0,[sp,#8]
;;;72       sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
00003e  9004              STR      r0,[sp,#0x10]
;;;73     	HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1);
000040  2200              MOVS     r2,#0
000042  4669              MOV      r1,sp
000044  480c              LDR      r0,|L6.120|
000046  f7fffffe          BL       HAL_TIM_PWM_ConfigChannel
;;;74     	HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_2);
00004a  2204              MOVS     r2,#4
00004c  4669              MOV      r1,sp
00004e  480a              LDR      r0,|L6.120|
000050  f7fffffe          BL       HAL_TIM_PWM_ConfigChannel
;;;75     	HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_3);
000054  2208              MOVS     r2,#8
000056  4669              MOV      r1,sp
000058  4807              LDR      r0,|L6.120|
00005a  f7fffffe          BL       HAL_TIM_PWM_ConfigChannel
;;;76     	HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4);
00005e  220c              MOVS     r2,#0xc
000060  4669              MOV      r1,sp
000062  4805              LDR      r0,|L6.120|
000064  f7fffffe          BL       HAL_TIM_PWM_ConfigChannel
;;;77       HAL_TIM_MspPostInit(&htim5);
000068  4803              LDR      r0,|L6.120|
00006a  f7fffffe          BL       HAL_TIM_MspPostInit
;;;78     
;;;79     }
00006e  b009              ADD      sp,sp,#0x24
000070  bd00              POP      {pc}
;;;80     void MX_TIM8_Init(void)
                          ENDP

000072  0000              DCW      0x0000
                  |L6.116|
                          DCD      0x40000c00
                  |L6.120|
                          DCD      htim5

                          AREA ||i.MX_TIM8_Init||, CODE, READONLY, ALIGN=2

                  MX_TIM8_Init PROC
;;;79     }
;;;80     void MX_TIM8_Init(void)
000000  b500              PUSH     {lr}
;;;81     {
000002  b091              SUB      sp,sp,#0x44
;;;82       TIM_MasterConfigTypeDef sMasterConfig;
;;;83       TIM_OC_InitTypeDef sConfigOC;
;;;84       TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
;;;85       htim8.Instance = TIM8;
000004  4825              LDR      r0,|L7.156|
000006  4926              LDR      r1,|L7.160|
000008  6008              STR      r0,[r1,#0]  ; htim8
;;;86       htim8.Init.Prescaler = TIM_PSC_APB2;
00000a  f24010a9          MOV      r0,#0x1a9
00000e  6048              STR      r0,[r1,#4]  ; htim8
;;;87       htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
000010  2100              MOVS     r1,#0
000012  4823              LDR      r0,|L7.160|
000014  6081              STR      r1,[r0,#8]
;;;88       htim8.Init.Period = PWM_RESOLUTION-1;
000016  f2423127          MOV      r1,#0x2327
00001a  60c1              STR      r1,[r0,#0xc]
;;;89       htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
00001c  2100              MOVS     r1,#0
00001e  6101              STR      r1,[r0,#0x10]
;;;90       htim8.Init.RepetitionCounter = 0;
000020  6141              STR      r1,[r0,#0x14]
;;;91     	HAL_TIM_PWM_Init(&htim8);
000022  f7fffffe          BL       HAL_TIM_PWM_Init
;;;92       sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
000026  2000              MOVS     r0,#0
000028  900f              STR      r0,[sp,#0x3c]
;;;93       sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
00002a  9010              STR      r0,[sp,#0x40]
;;;94     	HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig);
00002c  a90f              ADD      r1,sp,#0x3c
00002e  481c              LDR      r0,|L7.160|
000030  f7fffffe          BL       HAL_TIMEx_MasterConfigSynchronization
;;;95       sConfigOC.OCMode = TIM_OCMODE_PWM1;
000034  2060              MOVS     r0,#0x60
000036  9008              STR      r0,[sp,#0x20]
;;;96       sConfigOC.Pulse = PWM_DEFAULT_DUTY;
000038  f2413088          MOV      r0,#0x1388
00003c  9009              STR      r0,[sp,#0x24]
;;;97       sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
00003e  2000              MOVS     r0,#0
000040  900a              STR      r0,[sp,#0x28]
;;;98       sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
000042  900b              STR      r0,[sp,#0x2c]
;;;99       sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
000044  900c              STR      r0,[sp,#0x30]
;;;100      sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
000046  900d              STR      r0,[sp,#0x34]
;;;101      sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
000048  900e              STR      r0,[sp,#0x38]
;;;102    	HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1);
00004a  2200              MOVS     r2,#0
00004c  a908              ADD      r1,sp,#0x20
00004e  4814              LDR      r0,|L7.160|
000050  f7fffffe          BL       HAL_TIM_PWM_ConfigChannel
;;;103    	HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_2);
000054  2204              MOVS     r2,#4
000056  a908              ADD      r1,sp,#0x20
000058  4811              LDR      r0,|L7.160|
00005a  f7fffffe          BL       HAL_TIM_PWM_ConfigChannel
;;;104    	HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_3);
00005e  2208              MOVS     r2,#8
000060  a908              ADD      r1,sp,#0x20
000062  480f              LDR      r0,|L7.160|
000064  f7fffffe          BL       HAL_TIM_PWM_ConfigChannel
;;;105    	HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_4);
000068  220c              MOVS     r2,#0xc
00006a  a908              ADD      r1,sp,#0x20
00006c  480c              LDR      r0,|L7.160|
00006e  f7fffffe          BL       HAL_TIM_PWM_ConfigChannel
;;;106      sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
000072  2000              MOVS     r0,#0
000074  9001              STR      r0,[sp,#4]
;;;107      sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
000076  9002              STR      r0,[sp,#8]
;;;108      sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
000078  9003              STR      r0,[sp,#0xc]
;;;109      sBreakDeadTimeConfig.DeadTime = 0;
00007a  9004              STR      r0,[sp,#0x10]
;;;110      sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
00007c  9005              STR      r0,[sp,#0x14]
;;;111      sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
00007e  f44f5000          MOV      r0,#0x2000
000082  9006              STR      r0,[sp,#0x18]
;;;112      sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
000084  2000              MOVS     r0,#0
000086  9007              STR      r0,[sp,#0x1c]
;;;113    	HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig);
000088  a901              ADD      r1,sp,#4
00008a  4805              LDR      r0,|L7.160|
00008c  f7fffffe          BL       HAL_TIMEx_ConfigBreakDeadTime
;;;114      HAL_TIM_MspPostInit(&htim8);
000090  4803              LDR      r0,|L7.160|
000092  f7fffffe          BL       HAL_TIM_MspPostInit
;;;115    }
000096  b011              ADD      sp,sp,#0x44
000098  bd00              POP      {pc}
;;;116    
                          ENDP

00009a  0000              DCW      0x0000
                  |L7.156|
                          DCD      0x40010400
                  |L7.160|
                          DCD      htim8

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  htim2
                          %        60
                  htim4
                          %        60
                  htim5
                          %        60
                  htim8
                          %        60

;*** Start embedded assembler ***

#line 1 "Hardware\\TIM.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_TIM_c_d738263a____REV16|
#line 388 ".\\CORE\\cmsis_armcc.h"
|__asm___5_TIM_c_d738263a____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_TIM_c_d738263a____REVSH|
#line 402
|__asm___5_TIM_c_d738263a____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_TIM_c_d738263a____RRX|
#line 587
|__asm___5_TIM_c_d738263a____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
