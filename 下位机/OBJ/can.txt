; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\can.o --asm_dir=.\OBJ\ --list_dir=.\OBJ\ --depend=.\obj\can.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\CORE -I.\USER -I.\HALLIB\STM32F4xx_HAL_Driver\Inc -I.\SYSTEM -I.\Hardware -I.\App -I.\DSP_LIB\Include -I.\FreeRTOS -I.\MPU9250\DMP -I.\MPU9250 -I.\RTE\_Project -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=526 -DSTM32F427xx -DSTM32F4 -DUSE_HAL_DRIVER -DSTM32F427xx -DARM_MATH_CM4 -D__CC_ARM -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING -DMPL_LOG_NDEBUG=1 -DEMPL -DMPU9250 -DEMPL_TARGET_STM32F4 --omf_browse=.\obj\can.crf Hardware\CAN.c]
                          THUMB

                          AREA ||i.HAL_CAN_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_CAN_MspDeInit PROC
;;;74     
;;;75     void HAL_CAN_MspDeInit(CAN_HandleTypeDef* canHandle)
000000  b510              PUSH     {r4,lr}
;;;76     {
000002  4604              MOV      r4,r0
;;;77     
;;;78       if(canHandle->Instance==CAN1)
000004  4915              LDR      r1,|L1.92|
000006  6820              LDR      r0,[r4,#0]
000008  4288              CMP      r0,r1
00000a  d110              BNE      |L1.46|
;;;79       {
;;;80         __HAL_RCC_CAN1_CLK_DISABLE();
00000c  4814              LDR      r0,|L1.96|
00000e  6800              LDR      r0,[r0,#0]
000010  f0207000          BIC      r0,r0,#0x2000000
000014  4912              LDR      r1,|L1.96|
000016  6008              STR      r0,[r1,#0]
;;;81     		HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1);
000018  2103              MOVS     r1,#3
00001a  4812              LDR      r0,|L1.100|
00001c  f7fffffe          BL       HAL_GPIO_DeInit
;;;82     		HAL_NVIC_DisableIRQ(CAN1_TX_IRQn);
000020  2013              MOVS     r0,#0x13
000022  f7fffffe          BL       HAL_NVIC_DisableIRQ
;;;83         HAL_NVIC_DisableIRQ(CAN1_RX0_IRQn);
000026  2014              MOVS     r0,#0x14
000028  f7fffffe          BL       HAL_NVIC_DisableIRQ
00002c  e014              B        |L1.88|
                  |L1.46|
;;;84     	}
;;;85       else if(canHandle->Instance==CAN2)
00002e  490e              LDR      r1,|L1.104|
000030  6820              LDR      r0,[r4,#0]
000032  4288              CMP      r0,r1
000034  d110              BNE      |L1.88|
;;;86       {
;;;87     		__HAL_RCC_CAN2_CLK_DISABLE();
000036  480a              LDR      r0,|L1.96|
000038  6800              LDR      r0,[r0,#0]
00003a  f0206080          BIC      r0,r0,#0x4000000
00003e  4908              LDR      r1,|L1.96|
000040  6008              STR      r0,[r1,#0]
;;;88     		HAL_GPIO_DeInit(GPIOB, GPIO_PIN_12|GPIO_PIN_13);
000042  f44f5140          MOV      r1,#0x3000
000046  4809              LDR      r0,|L1.108|
000048  f7fffffe          BL       HAL_GPIO_DeInit
;;;89     		HAL_NVIC_DisableIRQ(CAN2_TX_IRQn);
00004c  203f              MOVS     r0,#0x3f
00004e  f7fffffe          BL       HAL_NVIC_DisableIRQ
;;;90         HAL_NVIC_DisableIRQ(CAN2_RX0_IRQn);
000052  2040              MOVS     r0,#0x40
000054  f7fffffe          BL       HAL_NVIC_DisableIRQ
                  |L1.88|
;;;91       }
;;;92     } 
000058  bd10              POP      {r4,pc}
;;;93     
                          ENDP

00005a  0000              DCW      0x0000
                  |L1.92|
                          DCD      0x40006400
                  |L1.96|
                          DCD      0x40023840
                  |L1.100|
                          DCD      0x40020c00
                  |L1.104|
                          DCD      0x40006800
                  |L1.108|
                          DCD      0x40020400

                          AREA ||i.HAL_CAN_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_CAN_MspInit PROC
;;;38     }
;;;39     void HAL_CAN_MspInit(CAN_HandleTypeDef* canHandle)
000000  b510              PUSH     {r4,lr}
;;;40     {
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;41     
;;;42       GPIO_InitTypeDef GPIO_InitStruct;
;;;43       if(canHandle->Instance==CAN1)
000006  4946              LDR      r1,|L2.288|
000008  6820              LDR      r0,[r4,#0]
00000a  4288              CMP      r0,r1
00000c  d140              BNE      |L2.144|
;;;44       {
;;;45     		__HAL_RCC_GPIOD_CLK_ENABLE();
00000e  bf00              NOP      
000010  2000              MOVS     r0,#0
000012  9000              STR      r0,[sp,#0]
000014  4843              LDR      r0,|L2.292|
000016  6800              LDR      r0,[r0,#0]
000018  f0400008          ORR      r0,r0,#8
00001c  4941              LDR      r1,|L2.292|
00001e  6008              STR      r0,[r1,#0]
000020  4608              MOV      r0,r1
000022  6800              LDR      r0,[r0,#0]
000024  f0000008          AND      r0,r0,#8
000028  9000              STR      r0,[sp,#0]
00002a  bf00              NOP      
00002c  bf00              NOP      
;;;46         __HAL_RCC_CAN1_CLK_ENABLE();
00002e  bf00              NOP      
000030  2000              MOVS     r0,#0
000032  9000              STR      r0,[sp,#0]
000034  483b              LDR      r0,|L2.292|
000036  3010              ADDS     r0,r0,#0x10
000038  6800              LDR      r0,[r0,#0]
00003a  f0407000          ORR      r0,r0,#0x2000000
00003e  4939              LDR      r1,|L2.292|
000040  3110              ADDS     r1,r1,#0x10
000042  6008              STR      r0,[r1,#0]
000044  4608              MOV      r0,r1
000046  6800              LDR      r0,[r0,#0]
000048  f0007000          AND      r0,r0,#0x2000000
00004c  9000              STR      r0,[sp,#0]
00004e  bf00              NOP      
000050  bf00              NOP      
;;;47         GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
000052  2003              MOVS     r0,#3
000054  9001              STR      r0,[sp,#4]
;;;48         GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
000056  2002              MOVS     r0,#2
000058  9002              STR      r0,[sp,#8]
;;;49         GPIO_InitStruct.Pull = GPIO_NOPULL;
00005a  2000              MOVS     r0,#0
00005c  9003              STR      r0,[sp,#0xc]
;;;50         GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
00005e  2003              MOVS     r0,#3
000060  9004              STR      r0,[sp,#0x10]
;;;51         GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
000062  2009              MOVS     r0,#9
000064  9005              STR      r0,[sp,#0x14]
;;;52         HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
000066  a901              ADD      r1,sp,#4
000068  482f              LDR      r0,|L2.296|
00006a  f7fffffe          BL       HAL_GPIO_Init
;;;53         HAL_NVIC_SetPriority(CAN1_TX_IRQn,CAN1_Priority,0);
00006e  2200              MOVS     r2,#0
000070  4611              MOV      r1,r2
000072  2013              MOVS     r0,#0x13
000074  f7fffffe          BL       HAL_NVIC_SetPriority
;;;54         HAL_NVIC_EnableIRQ(CAN1_TX_IRQn);
000078  2013              MOVS     r0,#0x13
00007a  f7fffffe          BL       HAL_NVIC_EnableIRQ
;;;55         HAL_NVIC_SetPriority(CAN1_RX0_IRQn,CAN1_Priority,0);
00007e  2200              MOVS     r2,#0
000080  4611              MOV      r1,r2
000082  2014              MOVS     r0,#0x14
000084  f7fffffe          BL       HAL_NVIC_SetPriority
;;;56         HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
000088  2014              MOVS     r0,#0x14
00008a  f7fffffe          BL       HAL_NVIC_EnableIRQ
00008e  e044              B        |L2.282|
                  |L2.144|
;;;57       }
;;;58       else if(canHandle->Instance==CAN2)
000090  4926              LDR      r1,|L2.300|
000092  6820              LDR      r0,[r4,#0]
000094  4288              CMP      r0,r1
000096  d140              BNE      |L2.282|
;;;59       {
;;;60     		__HAL_RCC_GPIOB_CLK_ENABLE();
000098  bf00              NOP      
00009a  2000              MOVS     r0,#0
00009c  9000              STR      r0,[sp,#0]
00009e  4821              LDR      r0,|L2.292|
0000a0  6800              LDR      r0,[r0,#0]
0000a2  f0400002          ORR      r0,r0,#2
0000a6  491f              LDR      r1,|L2.292|
0000a8  6008              STR      r0,[r1,#0]
0000aa  4608              MOV      r0,r1
0000ac  6800              LDR      r0,[r0,#0]
0000ae  f0000002          AND      r0,r0,#2
0000b2  9000              STR      r0,[sp,#0]
0000b4  bf00              NOP      
0000b6  bf00              NOP      
;;;61     		__HAL_RCC_CAN2_CLK_ENABLE();
0000b8  bf00              NOP      
0000ba  2000              MOVS     r0,#0
0000bc  9000              STR      r0,[sp,#0]
0000be  4819              LDR      r0,|L2.292|
0000c0  3010              ADDS     r0,r0,#0x10
0000c2  6800              LDR      r0,[r0,#0]
0000c4  f0406080          ORR      r0,r0,#0x4000000
0000c8  4916              LDR      r1,|L2.292|
0000ca  3110              ADDS     r1,r1,#0x10
0000cc  6008              STR      r0,[r1,#0]
0000ce  4608              MOV      r0,r1
0000d0  6800              LDR      r0,[r0,#0]
0000d2  f0006080          AND      r0,r0,#0x4000000
0000d6  9000              STR      r0,[sp,#0]
0000d8  bf00              NOP      
0000da  bf00              NOP      
;;;62         GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
0000dc  f44f5040          MOV      r0,#0x3000
0000e0  9001              STR      r0,[sp,#4]
;;;63         GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
0000e2  2002              MOVS     r0,#2
0000e4  9002              STR      r0,[sp,#8]
;;;64         GPIO_InitStruct.Pull = GPIO_NOPULL;
0000e6  2000              MOVS     r0,#0
0000e8  9003              STR      r0,[sp,#0xc]
;;;65         GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
0000ea  2003              MOVS     r0,#3
0000ec  9004              STR      r0,[sp,#0x10]
;;;66         GPIO_InitStruct.Alternate = GPIO_AF9_CAN2;
0000ee  2009              MOVS     r0,#9
0000f0  9005              STR      r0,[sp,#0x14]
;;;67         HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
0000f2  a901              ADD      r1,sp,#4
0000f4  480e              LDR      r0,|L2.304|
0000f6  f7fffffe          BL       HAL_GPIO_Init
;;;68     		HAL_NVIC_SetPriority(CAN2_TX_IRQn,CAN2_Priority, 0);
0000fa  2200              MOVS     r2,#0
0000fc  4611              MOV      r1,r2
0000fe  203f              MOVS     r0,#0x3f
000100  f7fffffe          BL       HAL_NVIC_SetPriority
;;;69         HAL_NVIC_EnableIRQ(CAN2_TX_IRQn);
000104  203f              MOVS     r0,#0x3f
000106  f7fffffe          BL       HAL_NVIC_EnableIRQ
;;;70         HAL_NVIC_SetPriority(CAN2_RX0_IRQn,CAN2_Priority, 0);
00010a  2200              MOVS     r2,#0
00010c  4611              MOV      r1,r2
00010e  2040              MOVS     r0,#0x40
000110  f7fffffe          BL       HAL_NVIC_SetPriority
;;;71         HAL_NVIC_EnableIRQ(CAN2_RX0_IRQn);
000114  2040              MOVS     r0,#0x40
000116  f7fffffe          BL       HAL_NVIC_EnableIRQ
                  |L2.282|
;;;72       }
;;;73     }
00011a  b006              ADD      sp,sp,#0x18
00011c  bd10              POP      {r4,pc}
;;;74     
                          ENDP

00011e  0000              DCW      0x0000
                  |L2.288|
                          DCD      0x40006400
                  |L2.292|
                          DCD      0x40023830
                  |L2.296|
                          DCD      0x40020c00
                  |L2.300|
                          DCD      0x40006800
                  |L2.304|
                          DCD      0x40020400

                          AREA ||i.MX_CAN1_Init||, CODE, READONLY, ALIGN=2

                  MX_CAN1_Init PROC
;;;6      CAN_HandleTypeDef hcan2;
;;;7      void MX_CAN1_Init(void)
000000  b510              PUSH     {r4,lr}
;;;8      {
;;;9        hcan1.Instance = CAN1;
000002  480c              LDR      r0,|L3.52|
000004  490c              LDR      r1,|L3.56|
000006  6008              STR      r0,[r1,#0]  ; hcan1
;;;10       hcan1.Init.Prescaler = 5;
000008  2005              MOVS     r0,#5
00000a  6048              STR      r0,[r1,#4]  ; hcan1
;;;11       hcan1.Init.Mode = CAN_MODE_NORMAL;
00000c  2100              MOVS     r1,#0
00000e  480a              LDR      r0,|L3.56|
000010  6081              STR      r1,[r0,#8]
;;;12       hcan1.Init.SJW = CAN_SJW_1TQ;
000012  60c1              STR      r1,[r0,#0xc]
;;;13       hcan1.Init.BS1 = CAN_BS1_3TQ;
000014  f44f3100          MOV      r1,#0x20000
000018  6101              STR      r1,[r0,#0x10]
;;;14       hcan1.Init.BS2 = CAN_BS2_5TQ;
00001a  0149              LSLS     r1,r1,#5
00001c  6141              STR      r1,[r0,#0x14]
;;;15       hcan1.Init.ABOM = ENABLE;
00001e  2101              MOVS     r1,#1
000020  61c1              STR      r1,[r0,#0x1c]
;;;16       hcan1.Init.TTCM = DISABLE;
000022  2100              MOVS     r1,#0
000024  6181              STR      r1,[r0,#0x18]
;;;17       hcan1.Init.AWUM = DISABLE;
000026  6201              STR      r1,[r0,#0x20]
;;;18       hcan1.Init.NART = DISABLE;
000028  6241              STR      r1,[r0,#0x24]
;;;19       hcan1.Init.RFLM = DISABLE;
00002a  6281              STR      r1,[r0,#0x28]
;;;20       hcan1.Init.TXFP = DISABLE;
00002c  62c1              STR      r1,[r0,#0x2c]
;;;21       HAL_CAN_Init(&hcan1);
00002e  f7fffffe          BL       HAL_CAN_Init
;;;22     }
000032  bd10              POP      {r4,pc}
;;;23     void MX_CAN2_Init(void)
                          ENDP

                  |L3.52|
                          DCD      0x40006400
                  |L3.56|
                          DCD      hcan1

                          AREA ||i.MX_CAN2_Init||, CODE, READONLY, ALIGN=2

                  MX_CAN2_Init PROC
;;;22     }
;;;23     void MX_CAN2_Init(void)
000000  b510              PUSH     {r4,lr}
;;;24     {
;;;25       hcan2.Instance = CAN2;
000002  480e              LDR      r0,|L4.60|
000004  490e              LDR      r1,|L4.64|
000006  6008              STR      r0,[r1,#0]  ; hcan2
;;;26       hcan2.Init.Prescaler = 5;
000008  2005              MOVS     r0,#5
00000a  6048              STR      r0,[r1,#4]  ; hcan2
;;;27       hcan2.Init.Mode = CAN_MODE_NORMAL;
00000c  2100              MOVS     r1,#0
00000e  480c              LDR      r0,|L4.64|
000010  6081              STR      r1,[r0,#8]
;;;28       hcan2.Init.SJW = CAN_SJW_4TQ;
000012  f04f7140          MOV      r1,#0x3000000
000016  60c1              STR      r1,[r0,#0xc]
;;;29       hcan2.Init.BS1 = CAN_BS1_3TQ;
000018  f44f3100          MOV      r1,#0x20000
00001c  6101              STR      r1,[r0,#0x10]
;;;30       hcan2.Init.BS2 = CAN_BS2_5TQ;
00001e  0149              LSLS     r1,r1,#5
000020  6141              STR      r1,[r0,#0x14]
;;;31       hcan2.Init.TTCM = DISABLE;
000022  2100              MOVS     r1,#0
000024  6181              STR      r1,[r0,#0x18]
;;;32       hcan2.Init.ABOM = ENABLE;
000026  2101              MOVS     r1,#1
000028  61c1              STR      r1,[r0,#0x1c]
;;;33       hcan2.Init.AWUM = DISABLE;
00002a  2100              MOVS     r1,#0
00002c  6201              STR      r1,[r0,#0x20]
;;;34       hcan2.Init.NART = DISABLE;
00002e  6241              STR      r1,[r0,#0x24]
;;;35       hcan2.Init.RFLM = DISABLE;
000030  6281              STR      r1,[r0,#0x28]
;;;36       hcan2.Init.TXFP = DISABLE;
000032  62c1              STR      r1,[r0,#0x2c]
;;;37     	HAL_CAN_Init(&hcan2);
000034  f7fffffe          BL       HAL_CAN_Init
;;;38     }
000038  bd10              POP      {r4,pc}
;;;39     void HAL_CAN_MspInit(CAN_HandleTypeDef* canHandle)
                          ENDP

00003a  0000              DCW      0x0000
                  |L4.60|
                          DCD      0x40006800
                  |L4.64|
                          DCD      hcan2

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  hcan1
                          %        64
                  hcan2
                          %        64

;*** Start embedded assembler ***

#line 1 "Hardware\\CAN.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_CAN_c_7b007a04____REV16|
#line 388 ".\\CORE\\cmsis_armcc.h"
|__asm___5_CAN_c_7b007a04____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_CAN_c_7b007a04____REVSH|
#line 402
|__asm___5_CAN_c_7b007a04____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_CAN_c_7b007a04____RRX|
#line 587
|__asm___5_CAN_c_7b007a04____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
