; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\user.o --asm_dir=.\OBJ\ --list_dir=.\OBJ\ --depend=.\obj\user.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\CORE -I.\USER -I.\HALLIB\STM32F4xx_HAL_Driver\Inc -I.\SYSTEM -I.\Hardware -I.\App -I.\DSP_LIB\Include -I.\FreeRTOS -I.\MPU9250\DMP -I.\MPU9250 -I.\RTE\_Project -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=526 -DSTM32F427xx -DSTM32F4 -DUSE_HAL_DRIVER -DSTM32F427xx -DARM_MATH_CM4 -D__CC_ARM -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING -DMPL_LOG_NDEBUG=1 -DEMPL -DMPU9250 -DEMPL_TARGET_STM32F4 --omf_browse=.\obj\user.crf USER\User.c]
                          THUMB

                          AREA ||i.User_Code||, CODE, READONLY, ALIGN=2

                  User_Code PROC
;;;8      TaskHandle_t Control_Task_Handler;    //控制算法句柄
;;;9      void User_Code(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;10     {
;;;11     	Power1_CTRL=1;   //打开1号电源开关
000002  2001              MOVS     r0,#1
000004  492c              LDR      r1,|L1.184|
000006  6008              STR      r0,[r1,#0]
;;;12     	Power2_CTRL=1;   //打开2号电源开关
000008  492c              LDR      r1,|L1.188|
00000a  f8c1028c          STR      r0,[r1,#0x28c]
;;;13     	Power3_CTRL=1;   //打开3号电源开关
00000e  492a              LDR      r1,|L1.184|
000010  3108              ADDS     r1,r1,#8
000012  6008              STR      r0,[r1,#0]
;;;14     	Power4_CTRL=1;   //打开4号电源开关
000014  4929              LDR      r1,|L1.188|
000016  f8c10294          STR      r0,[r1,#0x294]
;;;15     	xTaskCreate((TaskFunction_t)LED_Flash,        //LED闪烁进程
00001a  4829              LDR      r0,|L1.192|
00001c  6800              LDR      r0,[r0,#0]  ; LED_Task_Handle
00001e  2101              MOVS     r1,#1
000020  2300              MOVS     r3,#0
000022  2280              MOVS     r2,#0x80
000024  e9cd1000          STRD     r1,r0,[sp,#0]
000028  a126              ADR      r1,|L1.196|
00002a  4829              LDR      r0,|L1.208|
00002c  f7fffffe          BL       xTaskCreate
;;;16     							(const char *)"LED_TASK",
;;;17     							(uint16_t)128,
;;;18     							(void *)NULL,
;;;19     							(UBaseType_t)1,
;;;20     							(TaskHandle_t *)LED_Task_Handle);
;;;21     	xTaskCreate((TaskFunction_t)PID_Calculate,    //底盘电机PID闭环
000030  4828              LDR      r0,|L1.212|
000032  6800              LDR      r0,[r0,#0]  ; PID_Calculate_Task
000034  2103              MOVS     r1,#3
000036  2300              MOVS     r3,#0
000038  2280              MOVS     r2,#0x80
00003a  e9cd1000          STRD     r1,r0,[sp,#0]
00003e  a126              ADR      r1,|L1.216|
000040  4829              LDR      r0,|L1.232|
000042  f7fffffe          BL       xTaskCreate
;;;22     							(const char *)"PID_Calculate",
;;;23     							(uint16_t)128,
;;;24     							(void *)NULL,
;;;25     							(UBaseType_t)3,
;;;26     							(TaskHandle_t *)PID_Calculate_Task);
;;;27     	xTaskCreate((TaskFunction_t)Remote_Control,   //遥控器周期处理
000046  4829              LDR      r0,|L1.236|
000048  6800              LDR      r0,[r0,#0]  ; Remote_Control_Task
00004a  2102              MOVS     r1,#2
00004c  2300              MOVS     r3,#0
00004e  2280              MOVS     r2,#0x80
000050  e9cd1000          STRD     r1,r0,[sp,#0]
000054  a126              ADR      r1,|L1.240|
000056  482a              LDR      r0,|L1.256|
000058  f7fffffe          BL       xTaskCreate
;;;28     							(const char *)"Remote_Control",
;;;29     							(uint16_t)128,
;;;30     							(void *)NULL,
;;;31     							(UBaseType_t)2,
;;;32     							(TaskHandle_t *)Remote_Control_Task);
;;;33     	xTaskCreate((TaskFunction_t)Base_Speed_Task,	//底盘PID闭环
00005c  4829              LDR      r0,|L1.260|
00005e  6800              LDR      r0,[r0,#0]  ; Base_Speed_Task_Handler
000060  2102              MOVS     r1,#2
000062  2300              MOVS     r3,#0
000064  2280              MOVS     r2,#0x80
000066  e9cd1000          STRD     r1,r0,[sp,#0]
00006a  a127              ADR      r1,|L1.264|
00006c  482a              LDR      r0,|L1.280|
00006e  f7fffffe          BL       xTaskCreate
;;;34     							(const char *)"Base_Speed_Task",
;;;35     							(uint16_t)128,
;;;36     							(void *)NULL,
;;;37     							(UBaseType_t)2,
;;;38     							(TaskHandle_t *)Base_Speed_Task_Handler);
;;;39     	xTaskCreate((TaskFunction_t)Communicate_Task,
000072  482a              LDR      r0,|L1.284|
000074  6800              LDR      r0,[r0,#0]  ; Communicate_Task_Handler
000076  2102              MOVS     r1,#2
000078  2300              MOVS     r3,#0
00007a  020a              LSLS     r2,r1,#8
00007c  e9cd1000          STRD     r1,r0,[sp,#0]
000080  a127              ADR      r1,|L1.288|
000082  482c              LDR      r0,|L1.308|
000084  f7fffffe          BL       xTaskCreate
;;;40     							(const char *)"Communicate_Task",   //周期通信
;;;41     							(uint16_t)512,
;;;42     							(void *)NULL,
;;;43     							(UBaseType_t)2,
;;;44     							(TaskHandle_t *)Communicate_Task_Handler);
;;;45     	xTaskCreate((TaskFunction_t)Odometer_Summary,
000088  482b              LDR      r0,|L1.312|
00008a  6800              LDR      r0,[r0,#0]  ; Odometer_Task_Handler
00008c  2103              MOVS     r1,#3
00008e  2300              MOVS     r3,#0
000090  2280              MOVS     r2,#0x80
000092  e9cd1000          STRD     r1,r0,[sp,#0]
000096  a129              ADR      r1,|L1.316|
000098  482c              LDR      r0,|L1.332|
00009a  f7fffffe          BL       xTaskCreate
;;;46     							(const char *)"Odometer_Task",   //里程计累计
;;;47     							(uint16_t)128,
;;;48     							(void *)NULL,
;;;49     							(UBaseType_t)3,
;;;50     							(TaskHandle_t *)Odometer_Task_Handler);
;;;51     	xTaskCreate((TaskFunction_t)Control_Task,
00009e  482c              LDR      r0,|L1.336|
0000a0  6800              LDR      r0,[r0,#0]  ; Control_Task_Handler
0000a2  2103              MOVS     r1,#3
0000a4  2300              MOVS     r3,#0
0000a6  f44f7200          MOV      r2,#0x200
0000aa  e9cd1000          STRD     r1,r0,[sp,#0]
0000ae  a129              ADR      r1,|L1.340|
0000b0  482c              LDR      r0,|L1.356|
0000b2  f7fffffe          BL       xTaskCreate
;;;52     							(const char *)"Control_Task",   //控制算法
;;;53     							(uint16_t)512,
;;;54     							(void *)NULL,
;;;55     							(UBaseType_t)3,
;;;56     							(TaskHandle_t *)Control_Task_Handler);
;;;57     }
0000b6  bd1c              POP      {r2-r4,pc}
                          ENDP

                  |L1.184|
                          DCD      0x42438288
                  |L1.188|
                          DCD      0x42438000
                  |L1.192|
                          DCD      LED_Task_Handle
                  |L1.196|
0000c4  4c45445f          DCB      "LED_TASK",0
0000c8  5441534b
0000cc  00      
0000cd  00                DCB      0
0000ce  00                DCB      0
0000cf  00                DCB      0
                  |L1.208|
                          DCD      LED_Flash
                  |L1.212|
                          DCD      PID_Calculate_Task
                  |L1.216|
0000d8  5049445f          DCB      "PID_Calculate",0
0000dc  43616c63
0000e0  756c6174
0000e4  6500    
0000e6  00                DCB      0
0000e7  00                DCB      0
                  |L1.232|
                          DCD      PID_Calculate
                  |L1.236|
                          DCD      Remote_Control_Task
                  |L1.240|
0000f0  52656d6f          DCB      "Remote_Control",0
0000f4  74655f43
0000f8  6f6e7472
0000fc  6f6c00  
0000ff  00                DCB      0
                  |L1.256|
                          DCD      Remote_Control
                  |L1.260|
                          DCD      Base_Speed_Task_Handler
                  |L1.264|
000108  42617365          DCB      "Base_Speed_Task",0
00010c  5f537065
000110  65645f54
000114  61736b00
                  |L1.280|
                          DCD      Base_Speed_Task
                  |L1.284|
                          DCD      Communicate_Task_Handler
                  |L1.288|
000120  436f6d6d          DCB      "Communicate_Task",0
000124  756e6963
000128  6174655f
00012c  5461736b
000130  00      
000131  00                DCB      0
000132  00                DCB      0
000133  00                DCB      0
                  |L1.308|
                          DCD      Communicate_Task
                  |L1.312|
                          DCD      Odometer_Task_Handler
                  |L1.316|
00013c  4f646f6d          DCB      "Odometer_Task",0
000140  65746572
000144  5f546173
000148  6b00    
00014a  00                DCB      0
00014b  00                DCB      0
                  |L1.332|
                          DCD      Odometer_Summary
                  |L1.336|
                          DCD      Control_Task_Handler
                  |L1.340|
000154  436f6e74          DCB      "Control_Task",0
000158  726f6c5f
00015c  5461736b
000160  00      
000161  00                DCB      0
000162  00                DCB      0
000163  00                DCB      0
                  |L1.356|
                          DCD      Control_Task

                          AREA ||.data||, DATA, ALIGN=2

                  LED_Task_Handle
                          DCD      0x00000000
                  PID_Calculate_Task
                          DCD      0x00000000
                  Remote_Control_Task
                          DCD      0x00000000
                  Base_Speed_Task_Handler
                          DCD      0x00000000
                  Communicate_Task_Handler
                          DCD      0x00000000
                  Odometer_Task_Handler
                          DCD      0x00000000
                  Control_Task_Handler
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "USER\\User.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_User_c_2f5751cc____REV16|
#line 388 ".\\CORE\\cmsis_armcc.h"
|__asm___6_User_c_2f5751cc____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_User_c_2f5751cc____REVSH|
#line 402
|__asm___6_User_c_2f5751cc____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_User_c_2f5751cc____RRX|
#line 587
|__asm___6_User_c_2f5751cc____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
