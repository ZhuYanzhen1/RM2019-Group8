; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\main.o --asm_dir=.\OBJ\ --list_dir=.\OBJ\ --depend=.\obj\main.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\CORE -I.\USER -I.\HALLIB\STM32F4xx_HAL_Driver\Inc -I.\SYSTEM -I.\Hardware -I.\App -I.\DSP_LIB\Include -I.\FreeRTOS -I.\MPU9250\DMP -I.\MPU9250 -I.\RTE\_Project -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=526 -DSTM32F427xx -DSTM32F4 -DUSE_HAL_DRIVER -DSTM32F427xx -DARM_MATH_CM4 -D__CC_ARM -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING -DMPL_LOG_NDEBUG=1 -DEMPL -DMPU9250 -DEMPL_TARGET_STM32F4 --omf_browse=.\obj\main.crf USER\main.c]
                          THUMB

                          AREA ||i.Init_Task||, CODE, READONLY, ALIGN=2

                  Init_Task PROC
;;;2      TaskHandle_t Init_Task_Hanlder;
;;;3      void Init_Task(void* pvParameters)
000000  b570              PUSH     {r4-r6,lr}
;;;4      {
000002  4605              MOV      r5,r0
;;;5      	taskENTER_CRITICAL();
000004  f7fffffe          BL       vPortEnterCritical
;;;6      	u8 num=1;
000008  2401              MOVS     r4,#1
;;;7      	oled_init();										//初始化OLED
00000a  f7fffffe          BL       oled_init
;;;8      	oled_LOGO();										//OLED显示RM的LOGO
00000e  f7fffffe          BL       oled_LOGO
;;;9      	Delayms(300);
000012  f44f7096          MOV      r0,#0x12c
000016  f7fffffe          BL       Delayms
;;;10     	oled_clear(Pen_Clear);
00001a  2000              MOVS     r0,#0
00001c  f7fffffe          BL       oled_clear
;;;11     	oled_printf(num,Pen_Write,"OLED Init Success");  //1
000020  a264              ADR      r2,|L1.436|
000022  2101              MOVS     r1,#1
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       oled_printf
;;;12     	LED_Init();											//初始化LED
00002a  f7fffffe          BL       LED_Init
;;;13     	num++;
00002e  1c64              ADDS     r4,r4,#1
;;;14     	oled_printf(num,Pen_Write,"LED Init Success");   //2
000030  a265              ADR      r2,|L1.456|
000032  2101              MOVS     r1,#1
000034  4620              MOV      r0,r4
000036  f7fffffe          BL       oled_printf
;;;15     	Random_Init();									//初始化硬件随机数
00003a  f7fffffe          BL       Random_Init
;;;16     	num++;
00003e  1c64              ADDS     r4,r4,#1
;;;17     	oled_printf(num,Pen_Write,"RNG Init Success");   //3
000040  a266              ADR      r2,|L1.476|
000042  2101              MOVS     r1,#1
000044  4620              MOV      r0,r4
000046  f7fffffe          BL       oled_printf
;;;18     	USART2_init(115200);							//初始化串口2(蓝牙串口)，波特率115200
00004a  f44f30e1          MOV      r0,#0x1c200
00004e  f7fffffe          BL       USART2_init
;;;19     	USART6_Init(115200);
000052  f44f30e1          MOV      r0,#0x1c200
000056  f7fffffe          BL       USART6_Init
;;;20     	num++;
00005a  1c64              ADDS     r4,r4,#1
;;;21     	oled_printf(num,Pen_Write,"USART2 Init Success");//4
00005c  a264              ADR      r2,|L1.496|
00005e  2101              MOVS     r1,#1
000060  4620              MOV      r0,r4
000062  f7fffffe          BL       oled_printf
;;;22     	ADC1_Init();										//初始化ADC
000066  f7fffffe          BL       ADC1_Init
;;;23     	num=1;
00006a  2401              MOVS     r4,#1
;;;24     	oled_clear(Pen_Clear);
00006c  2000              MOVS     r0,#0
00006e  f7fffffe          BL       oled_clear
;;;25     	oled_printf(num,Pen_Write,"ADC1 Init Success");  //1
000072  a264              ADR      r2,|L1.516|
000074  2101              MOVS     r1,#1
000076  4620              MOV      r0,r4
000078  f7fffffe          BL       oled_printf
;;;26     	DAC1_Init();										//初始化DAC1
00007c  f7fffffe          BL       DAC1_Init
;;;27     	num++;
000080  1c64              ADDS     r4,r4,#1
;;;28     	oled_printf(num,Pen_Write,"DAC1 Init Success");  //2
000082  a265              ADR      r2,|L1.536|
000084  2101              MOVS     r1,#1
000086  4620              MOV      r0,r4
000088  f7fffffe          BL       oled_printf
;;;29     	DAC2_Init();										//初始化DAC2
00008c  f7fffffe          BL       DAC2_Init
;;;30     	num++;
000090  1c64              ADDS     r4,r4,#1
;;;31     	oled_printf(num,Pen_Write,"DAC2 Init Success");  //3
000092  a266              ADR      r2,|L1.556|
000094  2101              MOVS     r1,#1
000096  4620              MOV      r0,r4
000098  f7fffffe          BL       oled_printf
;;;32     	IIC2_Init();										//初始化IIC2
00009c  f7fffffe          BL       IIC2_Init
;;;33     	num++;
0000a0  1c64              ADDS     r4,r4,#1
;;;34     	oled_printf(num,Pen_Write,"IIC2 Init Success");  //4
0000a2  a267              ADR      r2,|L1.576|
0000a4  2101              MOVS     r1,#1
0000a6  4620              MOV      r0,r4
0000a8  f7fffffe          BL       oled_printf
;;;35     	num=1;
0000ac  2401              MOVS     r4,#1
;;;36     	oled_clear(Pen_Clear);
0000ae  2000              MOVS     r0,#0
0000b0  f7fffffe          BL       oled_clear
;;;37     	Key_Init();											//初始化用户按键
0000b4  f7fffffe          BL       Key_Init
;;;38     	oled_printf(num,Pen_Write,"Key Init Success");   //1
0000b8  a266              ADR      r2,|L1.596|
0000ba  2101              MOVS     r1,#1
0000bc  4620              MOV      r0,r4
0000be  f7fffffe          BL       oled_printf
;;;39     	num++;
0000c2  1c64              ADDS     r4,r4,#1
;;;40     	oled_printf(num,Pen_Write,"Malloc Init Success"); //2
0000c4  a268              ADR      r2,|L1.616|
0000c6  2101              MOVS     r1,#1
0000c8  4620              MOV      r0,r4
0000ca  f7fffffe          BL       oled_printf
;;;41     	Beep_Startup();									//初始化蜂鸣器
0000ce  f7fffffe          BL       Beep_Startup
;;;42     	num++;
0000d2  1c64              ADDS     r4,r4,#1
;;;43     	oled_printf(num,Pen_Write,"Beep Init Success");  //3
0000d4  a269              ADR      r2,|L1.636|
0000d6  2101              MOVS     r1,#1
0000d8  4620              MOV      r0,r4
0000da  f7fffffe          BL       oled_printf
;;;44     	num++;
0000de  1c64              ADDS     r4,r4,#1
;;;45     	MX_CAN1_Init();									//初始化CAN1
0000e0  f7fffffe          BL       MX_CAN1_Init
;;;46     	oled_printf(num,Pen_Write,"CAN1 Init Success");  //4
0000e4  a26a              ADR      r2,|L1.656|
0000e6  2101              MOVS     r1,#1
0000e8  4620              MOV      r0,r4
0000ea  f7fffffe          BL       oled_printf
;;;47     	num++;
0000ee  1c64              ADDS     r4,r4,#1
;;;48     	num=1;
0000f0  2401              MOVS     r4,#1
;;;49     	oled_clear(Pen_Clear);
0000f2  2000              MOVS     r0,#0
0000f4  f7fffffe          BL       oled_clear
;;;50     	MX_CAN2_Init();									//初始化CAN2
0000f8  f7fffffe          BL       MX_CAN2_Init
;;;51     	oled_printf(num,Pen_Write,"CAN2 Init Success");  //1
0000fc  a269              ADR      r2,|L1.676|
0000fe  2101              MOVS     r1,#1
000100  4620              MOV      r0,r4
000102  f7fffffe          BL       oled_printf
;;;52     	num++;
000106  1c64              ADDS     r4,r4,#1
;;;53     	PWM_Init();											//初始化PWM
000108  f7fffffe          BL       PWM_Init
;;;54     	oled_printf(num,Pen_Write,"PWM Init Success");   //2
00010c  a26a              ADR      r2,|L1.696|
00010e  2101              MOVS     r1,#1
000110  4620              MOV      r0,r4
000112  f7fffffe          BL       oled_printf
;;;55     	num++;
000116  1c64              ADDS     r4,r4,#1
;;;56     	USART3_Init(115200);						//初始化妙算交互口
000118  f44f30e1          MOV      r0,#0x1c200
00011c  f7fffffe          BL       USART3_Init
;;;57     	oled_printf(num,Pen_Write,"USART3 Init Success");
000120  a26a              ADR      r2,|L1.716|
000122  2101              MOVS     r1,#1
000124  4620              MOV      r0,r4
000126  f7fffffe          BL       oled_printf
;;;58     	num++;
00012a  1c64              ADDS     r4,r4,#1
;;;59     	Laser_Init();										//初始化激光
00012c  f7fffffe          BL       Laser_Init
;;;60     	oled_printf(num,Pen_Write,"Laser Init Success");//4
000130  a26b              ADR      r2,|L1.736|
000132  2101              MOVS     r1,#1
000134  4620              MOV      r0,r4
000136  f7fffffe          BL       oled_printf
;;;61     	num++;
00013a  1c64              ADDS     r4,r4,#1
;;;62     	num=1;
00013c  2401              MOVS     r4,#1
;;;63     	oled_clear(Pen_Clear);
00013e  2000              MOVS     r0,#0
000140  f7fffffe          BL       oled_clear
;;;64     	Remote_Init();									//初始化遥控器
000144  f7fffffe          BL       Remote_Init
;;;65     	oled_printf(num,Pen_Write,"Remote Init Success"); //1
000148  a26a              ADR      r2,|L1.756|
00014a  2101              MOVS     r1,#1
00014c  4620              MOV      r0,r4
00014e  f7fffffe          BL       oled_printf
;;;66     	num++;
000152  1c64              ADDS     r4,r4,#1
;;;67     	Power_Init();										//初始化供电
000154  f7fffffe          BL       Power_Init
;;;68     	oled_printf(num,Pen_Write,"Power Init Success"); //2
000158  a26b              ADR      r2,|L1.776|
00015a  2101              MOVS     r1,#1
00015c  4620              MOV      r0,r4
00015e  f7fffffe          BL       oled_printf
;;;69     	num=1;
000162  2401              MOVS     r4,#1
;;;70     	oled_clear(Pen_Clear);
000164  2000              MOVS     r0,#0
000166  f7fffffe          BL       oled_clear
;;;71     	SPI4_Init();										//初始化SPI4
00016a  f7fffffe          BL       SPI4_Init
;;;72     	oled_printf(num,Pen_Write,"SPI4 Init Success");  //3
00016e  a26b              ADR      r2,|L1.796|
000170  2101              MOVS     r1,#1
000172  4620              MOV      r0,r4
000174  f7fffffe          BL       oled_printf
;;;73     	num++;
000178  1c64              ADDS     r4,r4,#1
;;;74     	Motor_Init();										//初始化马达
00017a  f7fffffe          BL       Motor_Init
;;;75     	oled_printf(num,Pen_Write,"Motor Init Success"); //4
00017e  a26c              ADR      r2,|L1.816|
000180  2101              MOVS     r1,#1
000182  4620              MOV      r0,r4
000184  f7fffffe          BL       oled_printf
;;;76     	num++;
000188  1c64              ADDS     r4,r4,#1
;;;77     	num=1;
00018a  2401              MOVS     r4,#1
;;;78     	oled_clear(Pen_Clear);
00018c  2000              MOVS     r0,#0
00018e  f7fffffe          BL       oled_clear
;;;79     	USART2_Receve_Handler.Buffer_Counter=-1;
000192  1ea0              SUBS     r0,r4,#2
000194  496b              LDR      r1,|L1.836|
000196  6048              STR      r0,[r1,#4]  ; USART2_Receve_Handler
;;;80     	USART3_Receve_Handler.Buffer_Counter=-1;
000198  496b              LDR      r1,|L1.840|
00019a  6048              STR      r0,[r1,#4]  ; USART3_Receve_Handler
;;;81     	PID_Init();                     //初始化PID参数
00019c  f7fffffe          BL       PID_Init
;;;82     	User_Code();										//进入用户代码
0001a0  f7fffffe          BL       User_Code
;;;83     	taskEXIT_CRITICAL();
0001a4  f7fffffe          BL       vPortExitCritical
;;;84     	vTaskDelete(Init_Task_Hanlder);
0001a8  4868              LDR      r0,|L1.844|
0001aa  6800              LDR      r0,[r0,#0]  ; Init_Task_Hanlder
0001ac  f7fffffe          BL       vTaskDelete
;;;85     }
0001b0  bd70              POP      {r4-r6,pc}
;;;86     int main(void)
                          ENDP

0001b2  0000              DCW      0x0000
                  |L1.436|
0001b4  4f4c4544          DCB      "OLED Init Success",0
0001b8  20496e69
0001bc  74205375
0001c0  63636573
0001c4  7300    
0001c6  00                DCB      0
0001c7  00                DCB      0
                  |L1.456|
0001c8  4c454420          DCB      "LED Init Success",0
0001cc  496e6974
0001d0  20537563
0001d4  63657373
0001d8  00      
0001d9  00                DCB      0
0001da  00                DCB      0
0001db  00                DCB      0
                  |L1.476|
0001dc  524e4720          DCB      "RNG Init Success",0
0001e0  496e6974
0001e4  20537563
0001e8  63657373
0001ec  00      
0001ed  00                DCB      0
0001ee  00                DCB      0
0001ef  00                DCB      0
                  |L1.496|
0001f0  55534152          DCB      "USART2 Init Success",0
0001f4  54322049
0001f8  6e697420
0001fc  53756363
000200  65737300
                  |L1.516|
000204  41444331          DCB      "ADC1 Init Success",0
000208  20496e69
00020c  74205375
000210  63636573
000214  7300    
000216  00                DCB      0
000217  00                DCB      0
                  |L1.536|
000218  44414331          DCB      "DAC1 Init Success",0
00021c  20496e69
000220  74205375
000224  63636573
000228  7300    
00022a  00                DCB      0
00022b  00                DCB      0
                  |L1.556|
00022c  44414332          DCB      "DAC2 Init Success",0
000230  20496e69
000234  74205375
000238  63636573
00023c  7300    
00023e  00                DCB      0
00023f  00                DCB      0
                  |L1.576|
000240  49494332          DCB      "IIC2 Init Success",0
000244  20496e69
000248  74205375
00024c  63636573
000250  7300    
000252  00                DCB      0
000253  00                DCB      0
                  |L1.596|
000254  4b657920          DCB      "Key Init Success",0
000258  496e6974
00025c  20537563
000260  63657373
000264  00      
000265  00                DCB      0
000266  00                DCB      0
000267  00                DCB      0
                  |L1.616|
000268  4d616c6c          DCB      "Malloc Init Success",0
00026c  6f632049
000270  6e697420
000274  53756363
000278  65737300
                  |L1.636|
00027c  42656570          DCB      "Beep Init Success",0
000280  20496e69
000284  74205375
000288  63636573
00028c  7300    
00028e  00                DCB      0
00028f  00                DCB      0
                  |L1.656|
000290  43414e31          DCB      "CAN1 Init Success",0
000294  20496e69
000298  74205375
00029c  63636573
0002a0  7300    
0002a2  00                DCB      0
0002a3  00                DCB      0
                  |L1.676|
0002a4  43414e32          DCB      "CAN2 Init Success",0
0002a8  20496e69
0002ac  74205375
0002b0  63636573
0002b4  7300    
0002b6  00                DCB      0
0002b7  00                DCB      0
                  |L1.696|
0002b8  50574d20          DCB      "PWM Init Success",0
0002bc  496e6974
0002c0  20537563
0002c4  63657373
0002c8  00      
0002c9  00                DCB      0
0002ca  00                DCB      0
0002cb  00                DCB      0
                  |L1.716|
0002cc  55534152          DCB      "USART3 Init Success",0
0002d0  54332049
0002d4  6e697420
0002d8  53756363
0002dc  65737300
                  |L1.736|
0002e0  4c617365          DCB      "Laser Init Success",0
0002e4  7220496e
0002e8  69742053
0002ec  75636365
0002f0  737300  
0002f3  00                DCB      0
                  |L1.756|
0002f4  52656d6f          DCB      "Remote Init Success",0
0002f8  74652049
0002fc  6e697420
000300  53756363
000304  65737300
                  |L1.776|
000308  506f7765          DCB      "Power Init Success",0
00030c  7220496e
000310  69742053
000314  75636365
000318  737300  
00031b  00                DCB      0
                  |L1.796|
00031c  53504934          DCB      "SPI4 Init Success",0
000320  20496e69
000324  74205375
000328  63636573
00032c  7300    
00032e  00                DCB      0
00032f  00                DCB      0
                  |L1.816|
000330  4d6f746f          DCB      "Motor Init Success",0
000334  7220496e
000338  69742053
00033c  75636365
000340  737300  
000343  00                DCB      0
                  |L1.836|
                          DCD      USART2_Receve_Handler
                  |L1.840|
                          DCD      USART3_Receve_Handler
                  |L1.844|
                          DCD      Init_Task_Hanlder

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;85     }
;;;86     int main(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;87     {
;;;88     	HAL_Init();                     //初始化HAL库    
000002  f7fffffe          BL       HAL_Init
;;;89     	Stm32_Clock_Init(360,12,2,8);   //设置时钟,180Mhz
000006  2308              MOVS     r3,#8
000008  2202              MOVS     r2,#2
00000a  210c              MOVS     r1,#0xc
00000c  f44f70b4          MOV      r0,#0x168
000010  f7fffffe          BL       Stm32_Clock_Init
;;;90     	xTaskCreate((TaskFunction_t)Init_Task,
000014  4807              LDR      r0,|L2.52|
000016  6800              LDR      r0,[r0,#0]  ; Init_Task_Hanlder
000018  2102              MOVS     r1,#2
00001a  2300              MOVS     r3,#0
00001c  2280              MOVS     r2,#0x80
00001e  e9cd1000          STRD     r1,r0,[sp,#0]
000022  a105              ADR      r1,|L2.56|
000024  4807              LDR      r0,|L2.68|
000026  f7fffffe          BL       xTaskCreate
;;;91     							(const char *)"Init_Task",
;;;92     							(uint16_t)128,
;;;93     							(void *)NULL,
;;;94     							(UBaseType_t)2,
;;;95     							(TaskHandle_t *)Init_Task_Hanlder);
;;;96     	vTaskStartScheduler();
00002a  f7fffffe          BL       vTaskStartScheduler
;;;97     }
00002e  2000              MOVS     r0,#0
000030  bd1c              POP      {r2-r4,pc}
                          ENDP

000032  0000              DCW      0x0000
                  |L2.52|
                          DCD      Init_Task_Hanlder
                  |L2.56|
000038  496e6974          DCB      "Init_Task",0
00003c  5f546173
000040  6b00    
000042  00                DCB      0
000043  00                DCB      0
                  |L2.68|
                          DCD      Init_Task

                          AREA ||.data||, DATA, ALIGN=2

                  Init_Task_Hanlder
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "USER\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_b68fa687____REV16|
#line 388 ".\\CORE\\cmsis_armcc.h"
|__asm___6_main_c_b68fa687____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_b68fa687____REVSH|
#line 402
|__asm___6_main_c_b68fa687____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_b68fa687____RRX|
#line 587
|__asm___6_main_c_b68fa687____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
