; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\beep.o --asm_dir=.\OBJ\ --list_dir=.\OBJ\ --depend=.\obj\beep.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\CORE -I.\USER -I.\HALLIB\STM32F4xx_HAL_Driver\Inc -I.\SYSTEM -I.\Hardware -I.\App -I.\DSP_LIB\Include -I.\FreeRTOS -I.\MPU9250\DMP -I.\MPU9250 -I.\RTE\_Project -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=526 -DSTM32F427xx -DSTM32F4 -DUSE_HAL_DRIVER -DSTM32F427xx -DARM_MATH_CM4 -D__CC_ARM -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING -DMPL_LOG_NDEBUG=1 -DEMPL -DMPU9250 -DEMPL_TARGET_STM32F4 --omf_browse=.\obj\beep.crf Hardware\Beep.c]
                          THUMB

                          AREA ||i.Beep_Complete||, CODE, READONLY, ALIGN=1

                  Beep_Complete PROC
;;;7      u32 Compare1=0;
;;;8      void Beep_Complete(void)
000000  b510              PUSH     {r4,lr}
;;;9      {
;;;10     	Init_Beep(512);
000002  f44f7000          MOV      r0,#0x200
000006  f7fffffe          BL       Init_Beep
;;;11     	Beep_On();
00000a  f7fffffe          BL       Beep_On
;;;12     	Delayms(250);
00000e  20fa              MOVS     r0,#0xfa
000010  f7fffffe          BL       Delayms
;;;13     	Init_Beep(384*2);
000014  f44f7040          MOV      r0,#0x300
000018  f7fffffe          BL       Init_Beep
;;;14     	Beep_On();
00001c  f7fffffe          BL       Beep_On
;;;15     	Delayms(250);
000020  20fa              MOVS     r0,#0xfa
000022  f7fffffe          BL       Delayms
;;;16     	Beep_Off();
000026  f7fffffe          BL       Beep_Off
;;;17     	Init_Beep(2000);
00002a  f44f60fa          MOV      r0,#0x7d0
00002e  f7fffffe          BL       Init_Beep
;;;18     }
000032  bd10              POP      {r4,pc}
;;;19     void Beep_Startup(void)
                          ENDP


                          AREA ||i.Beep_Off||, CODE, READONLY, ALIGN=2

                  Beep_Off PROC
;;;66     }
;;;67     void Beep_Off(void)
000000  b510              PUSH     {r4,lr}
;;;68     {
;;;69     	HAL_TIM_PWM_Stop(&TIM12_Handler,TIM_CHANNEL_1);
000002  2100              MOVS     r1,#0
000004  4801              LDR      r0,|L2.12|
000006  f7fffffe          BL       HAL_TIM_PWM_Stop
;;;70     }
00000a  bd10              POP      {r4,pc}
;;;71     
                          ENDP

                  |L2.12|
                          DCD      TIM12_Handler

                          AREA ||i.Beep_On||, CODE, READONLY, ALIGN=2

                  Beep_On PROC
;;;61     }
;;;62     void Beep_On(void)
000000  b510              PUSH     {r4,lr}
;;;63     {
;;;64     	HAL_TIM_PWM_Start(&TIM12_Handler,TIM_CHANNEL_1);
000002  2100              MOVS     r1,#0
000004  4803              LDR      r0,|L3.20|
000006  f7fffffe          BL       HAL_TIM_PWM_Start
;;;65     	TIM_SetTIM12Compare1(0.95);
00000a  ed9f0a03          VLDR     s0,|L3.24|
00000e  f7fffffe          BL       TIM_SetTIM12Compare1
;;;66     }
000012  bd10              POP      {r4,pc}
;;;67     void Beep_Off(void)
                          ENDP

                  |L3.20|
                          DCD      TIM12_Handler
                  |L3.24|
000018  3f733333          DCFS     0x3f733333 ; 0.94999998807907104

                          AREA ||i.Beep_Startup||, CODE, READONLY, ALIGN=1

                  Beep_Startup PROC
;;;18     }
;;;19     void Beep_Startup(void)
000000  b510              PUSH     {r4,lr}
;;;20     {
;;;21     	Init_Beep(512);
000002  f44f7000          MOV      r0,#0x200
000006  f7fffffe          BL       Init_Beep
;;;22     	Beep_On();
00000a  f7fffffe          BL       Beep_On
;;;23     	Delayms(250);
00000e  20fa              MOVS     r0,#0xfa
000010  f7fffffe          BL       Delayms
;;;24     	Init_Beep(288*2);
000014  f44f7010          MOV      r0,#0x240
000018  f7fffffe          BL       Init_Beep
;;;25     	Beep_On();
00001c  f7fffffe          BL       Beep_On
;;;26     	Delayms(250);
000020  20fa              MOVS     r0,#0xfa
000022  f7fffffe          BL       Delayms
;;;27     	Init_Beep(384*2);
000026  f44f7040          MOV      r0,#0x300
00002a  f7fffffe          BL       Init_Beep
;;;28     	Beep_On();
00002e  f7fffffe          BL       Beep_On
;;;29     	Delayms(250);
000032  20fa              MOVS     r0,#0xfa
000034  f7fffffe          BL       Delayms
;;;30     	Beep_Off();
000038  f7fffffe          BL       Beep_Off
;;;31     	Init_Beep(2000);
00003c  f44f60fa          MOV      r0,#0x7d0
000040  f7fffffe          BL       Init_Beep
;;;32     }
000044  bd10              POP      {r4,pc}
;;;33     void TIM_SetTIM12Compare1(float compare)
                          ENDP


                          AREA ||i.Init_Beep||, CODE, READONLY, ALIGN=2

                  Init_Beep PROC
;;;36     }
;;;37     void Init_Beep(unsigned int Frequency)
000000  b510              PUSH     {r4,lr}
;;;38     {
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;39     		GPIO_InitTypeDef GPIO_Initure;
;;;40     	  __HAL_RCC_TIM12_CLK_ENABLE();			//使能定时器3
000006  bf00              NOP      
000008  2000              MOVS     r0,#0
00000a  9000              STR      r0,[sp,#0]
00000c  482b              LDR      r0,|L5.188|
00000e  6800              LDR      r0,[r0,#0]
000010  f0400040          ORR      r0,r0,#0x40
000014  4929              LDR      r1,|L5.188|
000016  6008              STR      r0,[r1,#0]
000018  4608              MOV      r0,r1
00001a  6800              LDR      r0,[r0,#0]
00001c  f0000040          AND      r0,r0,#0x40
000020  9000              STR      r0,[sp,#0]
000022  bf00              NOP      
000024  bf00              NOP      
;;;41         __HAL_RCC_GPIOH_CLK_ENABLE();			//开启GPIOB时钟
000026  bf00              NOP      
000028  2000              MOVS     r0,#0
00002a  9000              STR      r0,[sp,#0]
00002c  4823              LDR      r0,|L5.188|
00002e  3810              SUBS     r0,r0,#0x10
000030  6800              LDR      r0,[r0,#0]
000032  f0400080          ORR      r0,r0,#0x80
000036  4921              LDR      r1,|L5.188|
000038  3910              SUBS     r1,r1,#0x10
00003a  6008              STR      r0,[r1,#0]
00003c  4608              MOV      r0,r1
00003e  6800              LDR      r0,[r0,#0]
000040  f0000080          AND      r0,r0,#0x80
000044  9000              STR      r0,[sp,#0]
000046  bf00              NOP      
000048  bf00              NOP      
;;;42         GPIO_Initure.Pin=GPIO_PIN_6;           	//PB4
00004a  2040              MOVS     r0,#0x40
00004c  9001              STR      r0,[sp,#4]
;;;43         GPIO_Initure.Mode=GPIO_MODE_AF_PP;  	//复用推挽输出
00004e  2002              MOVS     r0,#2
000050  9002              STR      r0,[sp,#8]
;;;44         GPIO_Initure.Pull=GPIO_PULLUP;          //上拉
000052  2001              MOVS     r0,#1
000054  9003              STR      r0,[sp,#0xc]
;;;45         GPIO_Initure.Speed=GPIO_SPEED_HIGH;     //高速
000056  2003              MOVS     r0,#3
000058  9004              STR      r0,[sp,#0x10]
;;;46     	  GPIO_Initure.Alternate= GPIO_AF9_TIM12;	//PB1复用为TIM3_CH4
00005a  2009              MOVS     r0,#9
00005c  9005              STR      r0,[sp,#0x14]
;;;47         HAL_GPIO_Init(GPIOH,&GPIO_Initure);
00005e  a901              ADD      r1,sp,#4
000060  4817              LDR      r0,|L5.192|
000062  f7fffffe          BL       HAL_GPIO_Init
;;;48     	  Compare1=1000000/Frequency;
000066  4817              LDR      r0,|L5.196|
000068  fbb0f0f4          UDIV     r0,r0,r4
00006c  4916              LDR      r1,|L5.200|
00006e  6008              STR      r0,[r1,#0]  ; Compare1
;;;49     		TIM12_Handler.Instance=TIM12;
000070  4816              LDR      r0,|L5.204|
000072  4917              LDR      r1,|L5.208|
000074  6008              STR      r0,[r1,#0]  ; TIM12_Handler
;;;50         TIM12_Handler.Init.Prescaler=89;
000076  2059              MOVS     r0,#0x59
000078  6048              STR      r0,[r1,#4]  ; TIM12_Handler
;;;51         TIM12_Handler.Init.CounterMode=TIM_COUNTERMODE_UP;
00007a  2100              MOVS     r1,#0
00007c  4814              LDR      r0,|L5.208|
00007e  6081              STR      r1,[r0,#8]
;;;52         TIM12_Handler.Init.Period=(1000000/Frequency)-1;
000080  4810              LDR      r0,|L5.196|
000082  fbb0f0f4          UDIV     r0,r0,r4
000086  1e40              SUBS     r0,r0,#1
000088  4911              LDR      r1,|L5.208|
00008a  60c8              STR      r0,[r1,#0xc]
;;;53         TIM12_Handler.Init.ClockDivision=TIM_CLOCKDIVISION_DIV1;
00008c  2100              MOVS     r1,#0
00008e  4810              LDR      r0,|L5.208|
000090  6101              STR      r1,[r0,#0x10]
;;;54         HAL_TIM_PWM_Init(&TIM12_Handler);
000092  f7fffffe          BL       HAL_TIM_PWM_Init
;;;55         TIM12_CH1Handler.OCMode=TIM_OCMODE_PWM1;
000096  2060              MOVS     r0,#0x60
000098  490e              LDR      r1,|L5.212|
00009a  6008              STR      r0,[r1,#0]  ; TIM12_CH1Handler
;;;56         TIM12_CH1Handler.Pulse=100;
00009c  2064              MOVS     r0,#0x64
00009e  6048              STR      r0,[r1,#4]  ; TIM12_CH1Handler
;;;57         TIM12_CH1Handler.OCPolarity=TIM_OCPOLARITY_LOW;
0000a0  2002              MOVS     r0,#2
0000a2  6088              STR      r0,[r1,#8]  ; TIM12_CH1Handler
;;;58         HAL_TIM_PWM_ConfigChannel(&TIM12_Handler,&TIM12_CH1Handler,TIM_CHANNEL_1);
0000a4  2200              MOVS     r2,#0
0000a6  480a              LDR      r0,|L5.208|
0000a8  f7fffffe          BL       HAL_TIM_PWM_ConfigChannel
;;;59         HAL_TIM_PWM_Start(&TIM12_Handler,TIM_CHANNEL_1);
0000ac  2100              MOVS     r1,#0
0000ae  4808              LDR      r0,|L5.208|
0000b0  f7fffffe          BL       HAL_TIM_PWM_Start
;;;60     		Beep_Off();
0000b4  f7fffffe          BL       Beep_Off
;;;61     }
0000b8  b006              ADD      sp,sp,#0x18
0000ba  bd10              POP      {r4,pc}
;;;62     void Beep_On(void)
                          ENDP

                  |L5.188|
                          DCD      0x40023840
                  |L5.192|
                          DCD      0x40021c00
                  |L5.196|
                          DCD      0x000f4240
                  |L5.200|
                          DCD      Compare1
                  |L5.204|
                          DCD      0x40001800
                  |L5.208|
                          DCD      TIM12_Handler
                  |L5.212|
                          DCD      TIM12_CH1Handler

                          AREA ||i.TIM_SetTIM12Compare1||, CODE, READONLY, ALIGN=2

                  TIM_SetTIM12Compare1 PROC
;;;32     }
;;;33     void TIM_SetTIM12Compare1(float compare)
000000  4806              LDR      r0,|L6.28|
;;;34     {
;;;35     	TIM12->CCR1=(u32)(Compare1*compare); 
000002  edd00a00          VLDR     s1,[r0,#0]
000006  eef80a60          VCVT.F32.U32 s1,s1
00000a  ee600a80          VMUL.F32 s1,s1,s0
00000e  eefc0ae0          VCVT.U32.F32 s1,s1
000012  ee100a90          VMOV     r0,s1
000016  4902              LDR      r1,|L6.32|
000018  6008              STR      r0,[r1,#0]
;;;36     }
00001a  4770              BX       lr
;;;37     void Init_Beep(unsigned int Frequency)
                          ENDP

                  |L6.28|
                          DCD      Compare1
                  |L6.32|
                          DCD      0x40001834

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  TIM12_Handler
                          %        60
                  TIM12_CH1Handler
                          %        28

                          AREA ||.data||, DATA, ALIGN=2

                  Compare1
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "Hardware\\Beep.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_Beep_c_Compare1____REV16|
#line 388 ".\\CORE\\cmsis_armcc.h"
|__asm___6_Beep_c_Compare1____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_Beep_c_Compare1____REVSH|
#line 402
|__asm___6_Beep_c_Compare1____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_Beep_c_Compare1____RRX|
#line 587
|__asm___6_Beep_c_Compare1____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
