; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\system_stm32f4xx.o --asm_dir=.\OBJ\ --list_dir=.\OBJ\ --depend=.\obj\system_stm32f4xx.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\CORE -I.\USER -I.\HALLIB\STM32F4xx_HAL_Driver\Inc -I.\SYSTEM -I.\Hardware -I.\App -I.\DSP_LIB\Include -I.\FreeRTOS -I.\MPU9250\DMP -I.\MPU9250 -I.\RTE\_Project -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=526 -DSTM32F427xx -DSTM32F4 -DUSE_HAL_DRIVER -DSTM32F427xx -DARM_MATH_CM4 -D__CC_ARM -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING -DMPL_LOG_NDEBUG=1 -DEMPL -DMPU9250 -DEMPL_TARGET_STM32F4 --omf_browse=.\obj\system_stm32f4xx.crf USER\system_stm32f4xx.c]
                          THUMB

                          AREA ||i.SystemCoreClockUpdate||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;210      */
;;;211    void SystemCoreClockUpdate(void)
000000  b570              PUSH     {r4-r6,lr}
;;;212    {
;;;213      uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
000002  2000              MOVS     r0,#0
000004  2200              MOVS     r2,#0
000006  2302              MOVS     r3,#2
000008  2400              MOVS     r4,#0
00000a  2102              MOVS     r1,#2
;;;214      
;;;215      /* Get SYSCLK source -------------------------------------------------------*/
;;;216      tmp = RCC->CFGR & RCC_CFGR_SWS;
00000c  4d27              LDR      r5,|L1.172|
00000e  682d              LDR      r5,[r5,#0]
000010  f005000c          AND      r0,r5,#0xc
;;;217    
;;;218      switch (tmp)
000014  b120              CBZ      r0,|L1.32|
000016  2804              CMP      r0,#4
000018  d006              BEQ      |L1.40|
00001a  2808              CMP      r0,#8
00001c  d134              BNE      |L1.136|
00001e  e007              B        |L1.48|
                  |L1.32|
;;;219      {
;;;220        case 0x00:  /* HSI used as system clock source */
;;;221          SystemCoreClock = HSI_VALUE;
000020  4d23              LDR      r5,|L1.176|
000022  4e24              LDR      r6,|L1.180|
000024  6035              STR      r5,[r6,#0]  ; SystemCoreClock
;;;222          break;
000026  e033              B        |L1.144|
                  |L1.40|
;;;223        case 0x04:  /* HSE used as system clock source */
;;;224          SystemCoreClock = HSE_VALUE;
000028  4d23              LDR      r5,|L1.184|
00002a  4e22              LDR      r6,|L1.180|
00002c  6035              STR      r5,[r6,#0]  ; SystemCoreClock
;;;225          break;
00002e  e02f              B        |L1.144|
                  |L1.48|
;;;226        case 0x08:  /* PLL used as system clock source */
;;;227    
;;;228          /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
;;;229             SYSCLK = PLL_VCO / PLL_P
;;;230             */    
;;;231          pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
000030  4d1e              LDR      r5,|L1.172|
000032  1f2d              SUBS     r5,r5,#4
000034  682d              LDR      r5,[r5,#0]
000036  f3c55480          UBFX     r4,r5,#22,#1
;;;232          pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
00003a  4d1c              LDR      r5,|L1.172|
00003c  1f2d              SUBS     r5,r5,#4
00003e  682d              LDR      r5,[r5,#0]
000040  f005013f          AND      r1,r5,#0x3f
;;;233          
;;;234          if (pllsource != 0)
000044  b154              CBZ      r4,|L1.92|
;;;235          {
;;;236            /* HSE used as PLL clock source */
;;;237            pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
000046  4d1c              LDR      r5,|L1.184|
000048  fbb5f5f1          UDIV     r5,r5,r1
00004c  4e17              LDR      r6,|L1.172|
00004e  1f36              SUBS     r6,r6,#4
000050  6836              LDR      r6,[r6,#0]
000052  f3c61688          UBFX     r6,r6,#6,#9
000056  fb05f206          MUL      r2,r5,r6
00005a  e009              B        |L1.112|
                  |L1.92|
;;;238          }
;;;239          else
;;;240          {
;;;241            /* HSI used as PLL clock source */
;;;242            pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
00005c  4d14              LDR      r5,|L1.176|
00005e  fbb5f5f1          UDIV     r5,r5,r1
000062  4e12              LDR      r6,|L1.172|
000064  1f36              SUBS     r6,r6,#4
000066  6836              LDR      r6,[r6,#0]
000068  f3c61688          UBFX     r6,r6,#6,#9
00006c  fb05f206          MUL      r2,r5,r6
                  |L1.112|
;;;243          }
;;;244    
;;;245          pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
000070  4d0e              LDR      r5,|L1.172|
000072  1f2d              SUBS     r5,r5,#4
000074  682d              LDR      r5,[r5,#0]
000076  f3c54501          UBFX     r5,r5,#16,#2
00007a  1c6d              ADDS     r5,r5,#1
00007c  006b              LSLS     r3,r5,#1
;;;246          SystemCoreClock = pllvco/pllp;
00007e  fbb2f5f3          UDIV     r5,r2,r3
000082  4e0c              LDR      r6,|L1.180|
000084  6035              STR      r5,[r6,#0]  ; SystemCoreClock
;;;247          break;
000086  e003              B        |L1.144|
                  |L1.136|
;;;248        default:
;;;249          SystemCoreClock = HSI_VALUE;
000088  4d09              LDR      r5,|L1.176|
00008a  4e0a              LDR      r6,|L1.180|
00008c  6035              STR      r5,[r6,#0]  ; SystemCoreClock
;;;250          break;
00008e  bf00              NOP      
                  |L1.144|
000090  bf00              NOP                            ;222
;;;251      }
;;;252      /* Compute HCLK frequency --------------------------------------------------*/
;;;253      /* Get HCLK prescaler */
;;;254      tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
000092  4d06              LDR      r5,|L1.172|
000094  682d              LDR      r5,[r5,#0]
000096  f3c51503          UBFX     r5,r5,#4,#4
00009a  4e08              LDR      r6,|L1.188|
00009c  5d70              LDRB     r0,[r6,r5]
;;;255      /* HCLK frequency */
;;;256      SystemCoreClock >>= tmp;
00009e  4d05              LDR      r5,|L1.180|
0000a0  682d              LDR      r5,[r5,#0]  ; SystemCoreClock
0000a2  40c5              LSRS     r5,r5,r0
0000a4  4e03              LDR      r6,|L1.180|
0000a6  6035              STR      r5,[r6,#0]  ; SystemCoreClock
;;;257    }
0000a8  bd70              POP      {r4-r6,pc}
;;;258    
                          ENDP

0000aa  0000              DCW      0x0000
                  |L1.172|
                          DCD      0x40023808
                  |L1.176|
                          DCD      0x0112a880
                  |L1.180|
                          DCD      SystemCoreClock
                  |L1.184|
                          DCD      0x00b71b00
                  |L1.188|
                          DCD      AHBPrescTable

                          AREA ||i.SystemInit||, CODE, READONLY, ALIGN=2

                  SystemInit PROC
;;;137      */
;;;138    void SystemInit(void)
000000  4814              LDR      r0,|L2.84|
;;;139    {
;;;140      /* FPU settings ------------------------------------------------------------*/
;;;141      #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
;;;142        SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
000002  6800              LDR      r0,[r0,#0]
000004  f4400070          ORR      r0,r0,#0xf00000
000008  4912              LDR      r1,|L2.84|
00000a  6008              STR      r0,[r1,#0]
;;;143      #endif
;;;144      /* Reset the RCC clock configuration to the default reset state ------------*/
;;;145      /* Set HSION bit */
;;;146      RCC->CR |= (uint32_t)0x00000001;
00000c  4812              LDR      r0,|L2.88|
00000e  6800              LDR      r0,[r0,#0]
000010  f0400001          ORR      r0,r0,#1
000014  4910              LDR      r1,|L2.88|
000016  6008              STR      r0,[r1,#0]
;;;147    
;;;148      /* Reset CFGR register */
;;;149      RCC->CFGR = 0x00000000;
000018  2000              MOVS     r0,#0
00001a  490f              LDR      r1,|L2.88|
00001c  3108              ADDS     r1,r1,#8
00001e  6008              STR      r0,[r1,#0]
;;;150    
;;;151      /* Reset HSEON, CSSON and PLLON bits */
;;;152      RCC->CR &= (uint32_t)0xFEF6FFFF;
000020  480d              LDR      r0,|L2.88|
000022  6800              LDR      r0,[r0,#0]
000024  490d              LDR      r1,|L2.92|
000026  4008              ANDS     r0,r0,r1
000028  490b              LDR      r1,|L2.88|
00002a  6008              STR      r0,[r1,#0]
;;;153    
;;;154      /* Reset PLLCFGR register */
;;;155      RCC->PLLCFGR = 0x24003010;
00002c  480c              LDR      r0,|L2.96|
00002e  1d09              ADDS     r1,r1,#4
000030  6008              STR      r0,[r1,#0]
;;;156    
;;;157      /* Reset HSEBYP bit */
;;;158      RCC->CR &= (uint32_t)0xFFFBFFFF;
000032  1f08              SUBS     r0,r1,#4
000034  6800              LDR      r0,[r0,#0]
000036  f4202080          BIC      r0,r0,#0x40000
00003a  1f09              SUBS     r1,r1,#4
00003c  6008              STR      r0,[r1,#0]
;;;159    
;;;160      /* Disable all interrupts */
;;;161      RCC->CIR = 0x00000000;
00003e  2000              MOVS     r0,#0
000040  4905              LDR      r1,|L2.88|
000042  310c              ADDS     r1,r1,#0xc
000044  6008              STR      r0,[r1,#0]
;;;162    
;;;163    #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)
;;;164      SystemInit_ExtMemCtl(); 
;;;165    #endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */
;;;166    
;;;167      /* Configure the Vector Table location add offset address ------------------*/
;;;168    #ifdef VECT_TAB_SRAM
;;;169      SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
;;;170    #else
;;;171      SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
000046  f04f6000          MOV      r0,#0x8000000
00004a  4902              LDR      r1,|L2.84|
00004c  3980              SUBS     r1,r1,#0x80
00004e  6008              STR      r0,[r1,#0]
;;;172    #endif
;;;173    }
000050  4770              BX       lr
;;;174    
                          ENDP

000052  0000              DCW      0x0000
                  |L2.84|
                          DCD      0xe000ed88
                  |L2.88|
                          DCD      0x40023800
                  |L2.92|
                          DCD      0xfef6ffff
                  |L2.96|
                          DCD      0x24003010

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  AHBPrescTable
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00
000008  01020304          DCB      0x01,0x02,0x03,0x04
00000c  06070809          DCB      0x06,0x07,0x08,0x09

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x0112a880

;*** Start embedded assembler ***

#line 1 "USER\\system_stm32f4xx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f4xx_c_5d646a67____REV16|
#line 388 ".\\CORE\\cmsis_armcc.h"
|__asm___18_system_stm32f4xx_c_5d646a67____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f4xx_c_5d646a67____REVSH|
#line 402
|__asm___18_system_stm32f4xx_c_5d646a67____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f4xx_c_5d646a67____RRX|
#line 587
|__asm___18_system_stm32f4xx_c_5d646a67____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
