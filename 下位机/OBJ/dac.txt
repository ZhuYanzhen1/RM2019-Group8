; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\dac.o --asm_dir=.\OBJ\ --list_dir=.\OBJ\ --depend=.\obj\dac.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\CORE -I.\USER -I.\HALLIB\STM32F4xx_HAL_Driver\Inc -I.\SYSTEM -I.\Hardware -I.\App -I.\DSP_LIB\Include -I.\FreeRTOS -I.\MPU9250\DMP -I.\MPU9250 -I.\RTE\_Project -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=526 -DSTM32F427xx -DSTM32F4 -DUSE_HAL_DRIVER -DSTM32F427xx -DARM_MATH_CM4 -D__CC_ARM -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING -DMPL_LOG_NDEBUG=1 -DEMPL -DMPU9250 -DEMPL_TARGET_STM32F4 --omf_browse=.\obj\dac.crf Hardware\DAC.c]
                          THUMB

                          AREA ||i.DAC1_Init||, CODE, READONLY, ALIGN=2

                  DAC1_Init PROC
;;;7      DAC_HandleTypeDef DAC2_Handler;//DAC句柄
;;;8      void DAC1_Init(void)
000000  b500              PUSH     {lr}
;;;9      {
000002  b089              SUB      sp,sp,#0x24
;;;10     		GPIO_InitTypeDef GPIO_Initure;
;;;11         __HAL_RCC_DAC_CLK_ENABLE();             //使能DAC时钟
000004  bf00              NOP      
000006  2000              MOVS     r0,#0
000008  9001              STR      r0,[sp,#4]
00000a  481f              LDR      r0,|L1.136|
00000c  6800              LDR      r0,[r0,#0]
00000e  f0405000          ORR      r0,r0,#0x20000000
000012  491d              LDR      r1,|L1.136|
000014  6008              STR      r0,[r1,#0]
000016  4608              MOV      r0,r1
000018  6800              LDR      r0,[r0,#0]
00001a  f0005000          AND      r0,r0,#0x20000000
00001e  9001              STR      r0,[sp,#4]
000020  bf00              NOP      
000022  bf00              NOP      
;;;12         __HAL_RCC_GPIOA_CLK_ENABLE();			//开启GPIOA时钟
000024  bf00              NOP      
000026  2000              MOVS     r0,#0
000028  9001              STR      r0,[sp,#4]
00002a  4817              LDR      r0,|L1.136|
00002c  3810              SUBS     r0,r0,#0x10
00002e  6800              LDR      r0,[r0,#0]
000030  f0400001          ORR      r0,r0,#1
000034  4914              LDR      r1,|L1.136|
000036  3910              SUBS     r1,r1,#0x10
000038  6008              STR      r0,[r1,#0]
00003a  4608              MOV      r0,r1
00003c  6800              LDR      r0,[r0,#0]
00003e  f0000001          AND      r0,r0,#1
000042  9001              STR      r0,[sp,#4]
000044  bf00              NOP      
000046  bf00              NOP      
;;;13         GPIO_Initure.Pin=GPIO_PIN_4;            //PA4
000048  2010              MOVS     r0,#0x10
00004a  9004              STR      r0,[sp,#0x10]
;;;14         GPIO_Initure.Mode=GPIO_MODE_ANALOG;     //模拟
00004c  2003              MOVS     r0,#3
00004e  9005              STR      r0,[sp,#0x14]
;;;15         GPIO_Initure.Pull=GPIO_NOPULL;          //不带上下拉
000050  2000              MOVS     r0,#0
000052  9006              STR      r0,[sp,#0x18]
;;;16         HAL_GPIO_Init(GPIOA,&GPIO_Initure);
000054  a904              ADD      r1,sp,#0x10
000056  480d              LDR      r0,|L1.140|
000058  f7fffffe          BL       HAL_GPIO_Init
;;;17         DAC_ChannelConfTypeDef DACCH1_Config;
;;;18         DAC1_Handler.Instance=DAC;
00005c  480c              LDR      r0,|L1.144|
00005e  490d              LDR      r1,|L1.148|
000060  6008              STR      r0,[r1,#0]  ; DAC1_Handler
;;;19         HAL_DAC_Init(&DAC1_Handler);                 //初始化DAC
000062  4608              MOV      r0,r1
000064  f7fffffe          BL       HAL_DAC_Init
;;;20         DACCH1_Config.DAC_Trigger=DAC_TRIGGER_NONE;             //不使用触发功能
000068  2000              MOVS     r0,#0
00006a  9002              STR      r0,[sp,#8]
;;;21         DACCH1_Config.DAC_OutputBuffer=DAC_OUTPUTBUFFER_DISABLE;//DAC1输出缓冲关闭
00006c  2002              MOVS     r0,#2
00006e  9003              STR      r0,[sp,#0xc]
;;;22         HAL_DAC_ConfigChannel(&DAC1_Handler,&DACCH1_Config,DAC_CHANNEL_1);//DAC通道1配置
000070  2200              MOVS     r2,#0
000072  a902              ADD      r1,sp,#8
000074  4807              LDR      r0,|L1.148|
000076  f7fffffe          BL       HAL_DAC_ConfigChannel
;;;23         HAL_DAC_Start(&DAC1_Handler,DAC_CHANNEL_1);  //开启DAC通道1
00007a  2100              MOVS     r1,#0
00007c  4805              LDR      r0,|L1.148|
00007e  f7fffffe          BL       HAL_DAC_Start
;;;24     }
000082  b009              ADD      sp,sp,#0x24
000084  bd00              POP      {pc}
;;;25     void DAC2_Init(void)
                          ENDP

000086  0000              DCW      0x0000
                  |L1.136|
                          DCD      0x40023840
                  |L1.140|
                          DCD      0x40020000
                  |L1.144|
                          DCD      0x40007400
                  |L1.148|
                          DCD      DAC1_Handler

                          AREA ||i.DAC1_Set||, CODE, READONLY, ALIGN=2

                  DAC1_Set PROC
;;;43     //vol:0~3300,代表0~3.3V
;;;44     void DAC1_Set(u16 vol)
000000  b570              PUSH     {r4-r6,lr}
;;;45     {
000002  ed2d8b04          VPUSH    {d8-d9}
000006  4604              MOV      r4,r0
;;;46     	double temp=vol;
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       __aeabi_ui2d
00000e  ec410b18          VMOV     d8,r0,r1
;;;47     	temp/=1000;
000012  ed9f0b15          VLDR     d0,|L2.104|
000016  ec532b10          VMOV     r2,r3,d0
00001a  ec510b18          VMOV     r0,r1,d8
00001e  f7fffffe          BL       __aeabi_ddiv
000022  ec410b18          VMOV     d8,r0,r1
;;;48     	temp=temp*4096/3.3;
000026  ed9f0b12          VLDR     d0,|L2.112|
00002a  ec532b10          VMOV     r2,r3,d0
00002e  ec510b18          VMOV     r0,r1,d8
000032  f7fffffe          BL       __aeabi_dmul
000036  ec410b19          VMOV     d9,r0,r1
00003a  ed9f0b0f          VLDR     d0,|L2.120|
00003e  ec532b10          VMOV     r2,r3,d0
000042  f7fffffe          BL       __aeabi_ddiv
000046  ec410b18          VMOV     d8,r0,r1
;;;49         HAL_DAC_SetValue(&DAC1_Handler,DAC_CHANNEL_1,DAC_ALIGN_12B_R,temp);//12位右对齐数据格式设置DAC值
00004a  ec510b18          VMOV     r0,r1,d8
00004e  f7fffffe          BL       __aeabi_d2uiz
000052  4605              MOV      r5,r0
000054  462b              MOV      r3,r5
000056  2200              MOVS     r2,#0
000058  4611              MOV      r1,r2
00005a  4809              LDR      r0,|L2.128|
00005c  f7fffffe          BL       HAL_DAC_SetValue
;;;50     }
000060  ecbd8b04          VPOP     {d8-d9}
000064  bd70              POP      {r4-r6,pc}
;;;51     void DAC2_Set(u16 vol)
                          ENDP

000066  0000              DCW      0x0000
                  |L2.104|
000068  00000000          DCFD     0x408f400000000000 ; 1000
00006c  408f4000
                  |L2.112|
000070  00000000          DCFD     0x40b0000000000000 ; 4096
000074  40b00000
                  |L2.120|
000078  66666666          DCFD     0x400a666666666666 ; 3.2999999999999998
00007c  400a6666
                  |L2.128|
                          DCD      DAC1_Handler

                          AREA ||i.DAC2_Init||, CODE, READONLY, ALIGN=2

                  DAC2_Init PROC
;;;24     }
;;;25     void DAC2_Init(void)
000000  b500              PUSH     {lr}
;;;26     {
000002  b089              SUB      sp,sp,#0x24
;;;27     		GPIO_InitTypeDef GPIO_Initure;
;;;28         __HAL_RCC_DAC_CLK_ENABLE();             //使能DAC时钟
000004  bf00              NOP      
000006  2000              MOVS     r0,#0
000008  9001              STR      r0,[sp,#4]
00000a  481f              LDR      r0,|L3.136|
00000c  6800              LDR      r0,[r0,#0]
00000e  f0405000          ORR      r0,r0,#0x20000000
000012  491d              LDR      r1,|L3.136|
000014  6008              STR      r0,[r1,#0]
000016  4608              MOV      r0,r1
000018  6800              LDR      r0,[r0,#0]
00001a  f0005000          AND      r0,r0,#0x20000000
00001e  9001              STR      r0,[sp,#4]
000020  bf00              NOP      
000022  bf00              NOP      
;;;29         __HAL_RCC_GPIOA_CLK_ENABLE();			//开启GPIOA时钟
000024  bf00              NOP      
000026  2000              MOVS     r0,#0
000028  9001              STR      r0,[sp,#4]
00002a  4817              LDR      r0,|L3.136|
00002c  3810              SUBS     r0,r0,#0x10
00002e  6800              LDR      r0,[r0,#0]
000030  f0400001          ORR      r0,r0,#1
000034  4914              LDR      r1,|L3.136|
000036  3910              SUBS     r1,r1,#0x10
000038  6008              STR      r0,[r1,#0]
00003a  4608              MOV      r0,r1
00003c  6800              LDR      r0,[r0,#0]
00003e  f0000001          AND      r0,r0,#1
000042  9001              STR      r0,[sp,#4]
000044  bf00              NOP      
000046  bf00              NOP      
;;;30         GPIO_Initure.Pin=GPIO_PIN_5;            //PA5
000048  2020              MOVS     r0,#0x20
00004a  9004              STR      r0,[sp,#0x10]
;;;31         GPIO_Initure.Mode=GPIO_MODE_ANALOG;     //模拟
00004c  2003              MOVS     r0,#3
00004e  9005              STR      r0,[sp,#0x14]
;;;32         GPIO_Initure.Pull=GPIO_NOPULL;          //不带上下拉
000050  2000              MOVS     r0,#0
000052  9006              STR      r0,[sp,#0x18]
;;;33         HAL_GPIO_Init(GPIOA,&GPIO_Initure);
000054  a904              ADD      r1,sp,#0x10
000056  480d              LDR      r0,|L3.140|
000058  f7fffffe          BL       HAL_GPIO_Init
;;;34         DAC_ChannelConfTypeDef DACCH2_Config;
;;;35         DAC2_Handler.Instance=DAC;
00005c  480c              LDR      r0,|L3.144|
00005e  490d              LDR      r1,|L3.148|
000060  6008              STR      r0,[r1,#0]  ; DAC2_Handler
;;;36         HAL_DAC_Init(&DAC2_Handler);                 //初始化DAC
000062  4608              MOV      r0,r1
000064  f7fffffe          BL       HAL_DAC_Init
;;;37         DACCH2_Config.DAC_Trigger=DAC_TRIGGER_NONE;             //不使用触发功能
000068  2000              MOVS     r0,#0
00006a  9002              STR      r0,[sp,#8]
;;;38         DACCH2_Config.DAC_OutputBuffer=DAC_OUTPUTBUFFER_DISABLE;//DAC1输出缓冲关闭
00006c  2002              MOVS     r0,#2
00006e  9003              STR      r0,[sp,#0xc]
;;;39         HAL_DAC_ConfigChannel(&DAC2_Handler,&DACCH2_Config,DAC_CHANNEL_2);//DAC通道1配置
000070  2210              MOVS     r2,#0x10
000072  a902              ADD      r1,sp,#8
000074  4807              LDR      r0,|L3.148|
000076  f7fffffe          BL       HAL_DAC_ConfigChannel
;;;40         HAL_DAC_Start(&DAC2_Handler,DAC_CHANNEL_2);  //开启DAC通道2
00007a  2110              MOVS     r1,#0x10
00007c  4805              LDR      r0,|L3.148|
00007e  f7fffffe          BL       HAL_DAC_Start
;;;41     }
000082  b009              ADD      sp,sp,#0x24
000084  bd00              POP      {pc}
;;;42     //设置通道1输出电压
                          ENDP

000086  0000              DCW      0x0000
                  |L3.136|
                          DCD      0x40023840
                  |L3.140|
                          DCD      0x40020000
                  |L3.144|
                          DCD      0x40007400
                  |L3.148|
                          DCD      DAC2_Handler

                          AREA ||i.DAC2_Set||, CODE, READONLY, ALIGN=2

                  DAC2_Set PROC
;;;50     }
;;;51     void DAC2_Set(u16 vol)
000000  b570              PUSH     {r4-r6,lr}
;;;52     {
000002  ed2d8b04          VPUSH    {d8-d9}
000006  4604              MOV      r4,r0
;;;53     	double temp=vol;
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       __aeabi_ui2d
00000e  ec410b18          VMOV     d8,r0,r1
;;;54     	temp/=1000;
000012  ed9f0b15          VLDR     d0,|L4.104|
000016  ec532b10          VMOV     r2,r3,d0
00001a  ec510b18          VMOV     r0,r1,d8
00001e  f7fffffe          BL       __aeabi_ddiv
000022  ec410b18          VMOV     d8,r0,r1
;;;55     	temp=temp*4096/3.3;
000026  ed9f0b12          VLDR     d0,|L4.112|
00002a  ec532b10          VMOV     r2,r3,d0
00002e  ec510b18          VMOV     r0,r1,d8
000032  f7fffffe          BL       __aeabi_dmul
000036  ec410b19          VMOV     d9,r0,r1
00003a  ed9f0b0f          VLDR     d0,|L4.120|
00003e  ec532b10          VMOV     r2,r3,d0
000042  f7fffffe          BL       __aeabi_ddiv
000046  ec410b18          VMOV     d8,r0,r1
;;;56       HAL_DAC_SetValue(&DAC2_Handler,DAC_CHANNEL_2,DAC_ALIGN_12B_R,temp);//12位右对齐数据格式设置DAC值
00004a  ec510b18          VMOV     r0,r1,d8
00004e  f7fffffe          BL       __aeabi_d2uiz
000052  4605              MOV      r5,r0
000054  462b              MOV      r3,r5
000056  2200              MOVS     r2,#0
000058  2110              MOVS     r1,#0x10
00005a  4809              LDR      r0,|L4.128|
00005c  f7fffffe          BL       HAL_DAC_SetValue
;;;57     }
000060  ecbd8b04          VPOP     {d8-d9}
000064  bd70              POP      {r4-r6,pc}
;;;58     
                          ENDP

000066  0000              DCW      0x0000
                  |L4.104|
000068  00000000          DCFD     0x408f400000000000 ; 1000
00006c  408f4000
                  |L4.112|
000070  00000000          DCFD     0x40b0000000000000 ; 4096
000074  40b00000
                  |L4.120|
000078  66666666          DCFD     0x400a666666666666 ; 3.2999999999999998
00007c  400a6666
                  |L4.128|
                          DCD      DAC2_Handler

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  DAC1_Handler
                          %        20
                  DAC2_Handler
                          %        20

;*** Start embedded assembler ***

#line 1 "Hardware\\DAC.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_DAC_c_c7c4f376____REV16|
#line 388 ".\\CORE\\cmsis_armcc.h"
|__asm___5_DAC_c_c7c4f376____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_DAC_c_c7c4f376____REVSH|
#line 402
|__asm___5_DAC_c_c7c4f376____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_DAC_c_c7c4f376____RRX|
#line 587
|__asm___5_DAC_c_c7c4f376____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
