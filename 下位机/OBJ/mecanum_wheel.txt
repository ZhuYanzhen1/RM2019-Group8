; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\mecanum_wheel.o --asm_dir=.\OBJ\ --list_dir=.\OBJ\ --depend=.\obj\mecanum_wheel.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\CORE -I.\USER -I.\HALLIB\STM32F4xx_HAL_Driver\Inc -I.\SYSTEM -I.\Hardware -I.\App -I.\DSP_LIB\Include -I.\FreeRTOS -I.\MPU9250\DMP -I.\MPU9250 -IC:\Users\blx\Desktop\RM19\RM2019-Group8\ÏÂÎ»»ú\RTE -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0 -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__UVISION_VERSION=514 -DSTM32F427xx -DSTM32F4 -DUSE_HAL_DRIVER -DSTM32F427xx -DARM_MATH_CM4 -D__CC_ARM -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING -DMPL_LOG_NDEBUG=1 -DEMPL -DMPU9250 -DEMPL_TARGET_STM32F4 --omf_browse=.\obj\mecanum_wheel.crf App\Mecanum_Wheel.c]
                          THUMB

                          AREA ||i.Speed_To_Wheel||, CODE, READONLY, ALIGN=2

                  Speed_To_Wheel PROC
;;;5      
;;;6      void Speed_To_Wheel(float vx_set, float vy_set,float wz_set,float wheel_speed[4])
000000  ee701a60          VSUB.F32 s3,s0,s1
;;;7      {
;;;8      	  wheel_speed[0] = (float)(+vx_set - vy_set + wz_set*(A+B))/(WHEEL_R * PI)*36*6;
000004  ed9f2a29          VLDR     s4,|L1.172|
000008  ee411a02          VMLA.F32 s3,s2,s4
00000c  eddf2a28          VLDR     s5,|L1.176|
000010  ee812aa2          VDIV.F32 s4,s3,s5
000014  eddf1a27          VLDR     s3,|L1.180|
000018  ee621a21          VMUL.F32 s3,s4,s3
00001c  eeb12a08          VMOV.F32 s4,#6.00000000
000020  ee611a82          VMUL.F32 s3,s3,s4
000024  edc01a00          VSTR     s3,[r0,#0]
;;;9          wheel_speed[1] = (float)(+vx_set + vy_set + wz_set*(A+B))/(WHEEL_R * PI)*36*6;
000028  ee701a20          VADD.F32 s3,s0,s1
00002c  ed9f2a1f          VLDR     s4,|L1.172|
000030  ee411a02          VMLA.F32 s3,s2,s4
000034  ed9f2a1e          VLDR     s4,|L1.176|
000038  eec12a82          VDIV.F32 s5,s3,s4
00003c  eddf1a1d          VLDR     s3,|L1.180|
000040  ee621aa1          VMUL.F32 s3,s5,s3
000044  eeb12a08          VMOV.F32 s4,#6.00000000
000048  ee611a82          VMUL.F32 s3,s3,s4
00004c  edc01a01          VSTR     s3,[r0,#4]
;;;10         wheel_speed[2] = (float)(-vx_set + vy_set + wz_set*(A+B))/(WHEEL_R * PI)*36*6;
000050  eef11a40          VNEG.F32 s3,s0
000054  ee711aa0          VADD.F32 s3,s3,s1
000058  ed9f2a14          VLDR     s4,|L1.172|
00005c  ee411a02          VMLA.F32 s3,s2,s4
000060  eddf2a13          VLDR     s5,|L1.176|
000064  ee812aa2          VDIV.F32 s4,s3,s5
000068  eddf1a12          VLDR     s3,|L1.180|
00006c  ee621a21          VMUL.F32 s3,s4,s3
000070  eeb12a08          VMOV.F32 s4,#6.00000000
000074  ee611a82          VMUL.F32 s3,s3,s4
000078  edc01a02          VSTR     s3,[r0,#8]
;;;11         wheel_speed[3] = (float)(-vx_set - vy_set + wz_set*(A+B))/(WHEEL_R * PI)*36*6;
00007c  eef11a40          VNEG.F32 s3,s0
000080  ee711ae0          VSUB.F32 s3,s3,s1
000084  ed9f2a09          VLDR     s4,|L1.172|
000088  ee411a02          VMLA.F32 s3,s2,s4
00008c  ed9f2a08          VLDR     s4,|L1.176|
000090  eec12a82          VDIV.F32 s5,s3,s4
000094  eddf1a07          VLDR     s3,|L1.180|
000098  ee621aa1          VMUL.F32 s3,s5,s3
00009c  eeb12a08          VMOV.F32 s4,#6.00000000
0000a0  ee611a82          VMUL.F32 s3,s3,s4
0000a4  edc01a03          VSTR     s3,[r0,#0xc]
;;;12     }
0000a8  4770              BX       lr
;;;13     
                          ENDP

0000aa  0000              DCW      0x0000
                  |L1.172|
0000ac  3ccccccd          DCFS     0x3ccccccd ; 0.02500000037252903
                  |L1.176|
0000b0  3cc104fb          DCFS     0x3cc104fb ; 0.023561945185065269
                  |L1.180|
0000b4  42100000          DCFS     0x42100000 ; 36
