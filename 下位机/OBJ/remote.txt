; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\remote.o --asm_dir=.\OBJ\ --list_dir=.\OBJ\ --depend=.\obj\remote.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\CORE -I.\USER -I.\HALLIB\STM32F4xx_HAL_Driver\Inc -I.\SYSTEM -I.\Hardware -I.\App -I.\DSP_LIB\Include -I.\FreeRTOS -I.\MPU9250\DMP -I.\MPU9250 -I.\RTE\_Project -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=526 -DSTM32F427xx -DSTM32F4 -DUSE_HAL_DRIVER -DSTM32F427xx -DARM_MATH_CM4 -D__CC_ARM -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING -DMPL_LOG_NDEBUG=1 -DEMPL -DMPU9250 -DEMPL_TARGET_STM32F4 --omf_browse=.\obj\remote.crf App\Remote.c]
                          THUMB

                          AREA ||i.Remote_Init||, CODE, READONLY, ALIGN=2

                  Remote_Init PROC
;;;74     }
;;;75     void Remote_Init(void)
000000  b508              PUSH     {r3,lr}
;;;76     {
;;;77     	DMA2_Init();
000002  f7fffffe          BL       DMA2_Init
;;;78     	USART1_Init();
000006  f7fffffe          BL       USART1_Init
;;;79     	__HAL_UART_CLEAR_IDLEFLAG(&DBUS_HUART);
00000a  bf00              NOP      
00000c  2000              MOVS     r0,#0
00000e  9000              STR      r0,[sp,#0]
000010  480b              LDR      r0,|L1.64|
000012  6800              LDR      r0,[r0,#0]  ; huart1
000014  6800              LDR      r0,[r0,#0]
000016  9000              STR      r0,[sp,#0]
000018  4809              LDR      r0,|L1.64|
00001a  6800              LDR      r0,[r0,#0]  ; huart1
00001c  6840              LDR      r0,[r0,#4]
00001e  9000              STR      r0,[sp,#0]
000020  bf00              NOP      
000022  bf00              NOP      
;;;80     	__HAL_UART_ENABLE_IT(&DBUS_HUART, UART_IT_IDLE);
000024  4806              LDR      r0,|L1.64|
000026  6800              LDR      r0,[r0,#0]  ; huart1
000028  68c0              LDR      r0,[r0,#0xc]
00002a  f0400010          ORR      r0,r0,#0x10
00002e  4904              LDR      r1,|L1.64|
000030  6809              LDR      r1,[r1,#0]  ; huart1
000032  60c8              STR      r0,[r1,#0xc]
;;;81     	uart_receive_dma_no_it(&DBUS_HUART, dbus_buf, DBUS_MAX_LEN);
000034  2232              MOVS     r2,#0x32
000036  4903              LDR      r1,|L1.68|
000038  4801              LDR      r0,|L1.64|
00003a  f7fffffe          BL       uart_receive_dma_no_it
;;;82     }
00003e  bd08              POP      {r3,pc}
;;;83     
                          ENDP

                  |L1.64|
                          DCD      huart1
                  |L1.68|
                          DCD      dbus_buf

                          AREA ||i.dma_current_data_counter||, CODE, READONLY, ALIGN=1

                  dma_current_data_counter PROC
;;;28     }
;;;29     uint16_t dma_current_data_counter(DMA_Stream_TypeDef *dma_stream)
000000  4601              MOV      r1,r0
;;;30     {
;;;31       return ((uint16_t)(dma_stream->NDTR));
000002  6848              LDR      r0,[r1,#4]
000004  b280              UXTH     r0,r0
;;;32     }
000006  4770              BX       lr
;;;33     void rc_callback_handler(rc_info_t *rc, uint8_t *buff)
                          ENDP


                          AREA ||i.rc_callback_handler||, CODE, READONLY, ALIGN=1

                  rc_callback_handler PROC
;;;32     }
;;;33     void rc_callback_handler(rc_info_t *rc, uint8_t *buff)
000000  b570              PUSH     {r4-r6,lr}
;;;34     {
;;;35       rc->ch1 = (buff[0] | buff[1] << 8) & 0x07FF;
000002  780a              LDRB     r2,[r1,#0]
000004  784b              LDRB     r3,[r1,#1]
000006  ea422203          ORR      r2,r2,r3,LSL #8
00000a  f3c2020a          UBFX     r2,r2,#0,#11
00000e  8002              STRH     r2,[r0,#0]
;;;36       rc->ch1 -= 1024;
000010  8802              LDRH     r2,[r0,#0]
000012  f5a26280          SUB      r2,r2,#0x400
000016  b212              SXTH     r2,r2
000018  8002              STRH     r2,[r0,#0]
;;;37       rc->ch2 = (buff[1] >> 3 | buff[2] << 5) & 0x07FF;
00001a  784a              LDRB     r2,[r1,#1]
00001c  10d2              ASRS     r2,r2,#3
00001e  788b              LDRB     r3,[r1,#2]
000020  ea421243          ORR      r2,r2,r3,LSL #5
000024  f3c2020a          UBFX     r2,r2,#0,#11
000028  8042              STRH     r2,[r0,#2]
;;;38       rc->ch2 -= 1024;
00002a  8842              LDRH     r2,[r0,#2]
00002c  f5a26280          SUB      r2,r2,#0x400
000030  b212              SXTH     r2,r2
000032  8042              STRH     r2,[r0,#2]
;;;39       rc->ch3 = (buff[2] >> 6 | buff[3] << 2 | buff[4] << 10) & 0x07FF;
000034  788a              LDRB     r2,[r1,#2]
000036  1192              ASRS     r2,r2,#6
000038  78cb              LDRB     r3,[r1,#3]
00003a  ea420283          ORR      r2,r2,r3,LSL #2
00003e  790b              LDRB     r3,[r1,#4]
000040  ea422283          ORR      r2,r2,r3,LSL #10
000044  f3c2020a          UBFX     r2,r2,#0,#11
000048  8082              STRH     r2,[r0,#4]
;;;40       rc->ch3 -= 1024;
00004a  8882              LDRH     r2,[r0,#4]
00004c  f5a26280          SUB      r2,r2,#0x400
000050  b212              SXTH     r2,r2
000052  8082              STRH     r2,[r0,#4]
;;;41       rc->ch4 = (buff[4] >> 1 | buff[5] << 7) & 0x07FF;
000054  790a              LDRB     r2,[r1,#4]
000056  1052              ASRS     r2,r2,#1
000058  794b              LDRB     r3,[r1,#5]
00005a  ea4212c3          ORR      r2,r2,r3,LSL #7
00005e  f3c2020a          UBFX     r2,r2,#0,#11
000062  80c2              STRH     r2,[r0,#6]
;;;42       rc->ch4 -= 1024;
000064  88c2              LDRH     r2,[r0,#6]
000066  f5a26280          SUB      r2,r2,#0x400
00006a  b212              SXTH     r2,r2
00006c  80c2              STRH     r2,[r0,#6]
;;;43       rc->sw1 = ((buff[5] >> 4) & 0x000C) >> 2;
00006e  794a              LDRB     r2,[r1,#5]
000070  1112              ASRS     r2,r2,#4
000072  0892              LSRS     r2,r2,#2
000074  7202              STRB     r2,[r0,#8]
;;;44       rc->sw2 = (buff[5] >> 4) & 0x0003;
000076  794a              LDRB     r2,[r1,#5]
000078  f3c21201          UBFX     r2,r2,#4,#2
00007c  7242              STRB     r2,[r0,#9]
;;;45       if ((abs(rc->ch1) > 660) || \
00007e  f9b05000          LDRSH    r5,[r0,#0]
000082  2d00              CMP      r5,#0
000084  db01              BLT      |L3.138|
000086  462e              MOV      r6,r5
000088  e000              B        |L3.140|
                  |L3.138|
00008a  426e              RSBS     r6,r5,#0
                  |L3.140|
00008c  f5b67f25          CMP      r6,#0x294
000090  dc1d              BGT      |L3.206|
;;;46           (abs(rc->ch2) > 660) || \
000092  f9b04002          LDRSH    r4,[r0,#2]
000096  2c00              CMP      r4,#0
000098  db01              BLT      |L3.158|
00009a  4626              MOV      r6,r4
00009c  e000              B        |L3.160|
                  |L3.158|
00009e  4266              RSBS     r6,r4,#0
                  |L3.160|
0000a0  f5b67f25          CMP      r6,#0x294
0000a4  dc13              BGT      |L3.206|
;;;47           (abs(rc->ch3) > 660) || \
0000a6  f9b03004          LDRSH    r3,[r0,#4]
0000aa  2b00              CMP      r3,#0
0000ac  db01              BLT      |L3.178|
0000ae  461e              MOV      r6,r3
0000b0  e000              B        |L3.180|
                  |L3.178|
0000b2  425e              RSBS     r6,r3,#0
                  |L3.180|
0000b4  f5b67f25          CMP      r6,#0x294
0000b8  dc09              BGT      |L3.206|
;;;48           (abs(rc->ch4) > 660))
0000ba  f9b02006          LDRSH    r2,[r0,#6]
0000be  2a00              CMP      r2,#0
0000c0  db01              BLT      |L3.198|
0000c2  4616              MOV      r6,r2
0000c4  e000              B        |L3.200|
                  |L3.198|
0000c6  4256              RSBS     r6,r2,#0
                  |L3.200|
0000c8  f5b67f25          CMP      r6,#0x294
0000cc  dd03              BLE      |L3.214|
                  |L3.206|
;;;49       {
;;;50         memset(rc, 0, sizeof(rc_info_t));
0000ce  2200              MOVS     r2,#0
0000d0  6002              STR      r2,[r0,#0]
0000d2  6042              STR      r2,[r0,#4]
0000d4  8102              STRH     r2,[r0,#8]
                  |L3.214|
;;;51       }
;;;52     }
0000d6  bd70              POP      {r4-r6,pc}
;;;53     static void uart_rx_idle_callback(UART_HandleTypeDef* huart)
                          ENDP


                          AREA ||i.uart_receive_dma_no_it||, CODE, READONLY, ALIGN=1

                  uart_receive_dma_no_it PROC
;;;6      rc_info_t Remote;
;;;7      static int uart_receive_dma_no_it(UART_HandleTypeDef* huart, uint8_t* pData, uint32_t Size)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;8      {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;9        uint32_t tmp1 = 0;
00000a  2700              MOVS     r7,#0
;;;10       tmp1 = huart->State;
00000c  f8947039          LDRB     r7,[r4,#0x39]
;;;11     	if (tmp1 == HAL_UART_STATE_READY)
000010  2f01              CMP      r7,#1
000012  d117              BNE      |L4.68|
;;;12     	{
;;;13     		if ((pData == NULL) || (Size == 0))
000014  b105              CBZ      r5,|L4.24|
000016  b916              CBNZ     r6,|L4.30|
                  |L4.24|
;;;14     		{
;;;15     			return HAL_ERROR;
000018  2001              MOVS     r0,#1
                  |L4.26|
;;;16     		}
;;;17     		huart->pRxBuffPtr = pData;
;;;18     		huart->RxXferSize = Size;
;;;19     		huart->ErrorCode  = HAL_UART_ERROR_NONE;
;;;20     		HAL_DMA_Start(huart->hdmarx, (uint32_t)&huart->Instance->DR, (uint32_t)pData, Size);
;;;21     		SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
;;;22     		return HAL_OK;
;;;23     	}
;;;24     	else
;;;25     	{
;;;26     		return HAL_BUSY;
;;;27     	}
;;;28     }
00001a  e8bd81f0          POP      {r4-r8,pc}
                  |L4.30|
00001e  62a5              STR      r5,[r4,#0x28]         ;17
000020  85a6              STRH     r6,[r4,#0x2c]         ;18
000022  2000              MOVS     r0,#0                 ;19
000024  63e0              STR      r0,[r4,#0x3c]         ;19
000026  6822              LDR      r2,[r4,#0]            ;20
000028  1d11              ADDS     r1,r2,#4              ;20
00002a  4633              MOV      r3,r6                 ;20
00002c  462a              MOV      r2,r5                 ;20
00002e  6b60              LDR      r0,[r4,#0x34]         ;20
000030  f7fffffe          BL       HAL_DMA_Start
000034  6820              LDR      r0,[r4,#0]            ;21
000036  6940              LDR      r0,[r0,#0x14]         ;21
000038  f0400040          ORR      r0,r0,#0x40           ;21
00003c  6821              LDR      r1,[r4,#0]            ;21
00003e  6148              STR      r0,[r1,#0x14]         ;21
000040  2000              MOVS     r0,#0                 ;22
000042  e7ea              B        |L4.26|
                  |L4.68|
000044  2002              MOVS     r0,#2                 ;26
000046  e7e8              B        |L4.26|
;;;29     uint16_t dma_current_data_counter(DMA_Stream_TypeDef *dma_stream)
                          ENDP


                          AREA ||i.uart_receive_handler||, CODE, READONLY, ALIGN=1

                  uart_receive_handler PROC
;;;66     }
;;;67     void uart_receive_handler(UART_HandleTypeDef *huart)
000000  b510              PUSH     {r4,lr}
;;;68     {
000002  4604              MOV      r4,r0
;;;69     	if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) && 
000004  6820              LDR      r0,[r4,#0]
000006  6800              LDR      r0,[r0,#0]
000008  f0000010          AND      r0,r0,#0x10
00000c  2810              CMP      r0,#0x10
00000e  d107              BNE      |L5.32|
;;;70     			__HAL_UART_GET_IT_SOURCE(huart, UART_IT_IDLE))
000010  6820              LDR      r0,[r4,#0]
000012  68c0              LDR      r0,[r0,#0xc]
000014  f0000010          AND      r0,r0,#0x10
000018  b110              CBZ      r0,|L5.32|
;;;71     	{
;;;72     		uart_rx_idle_callback(huart);
00001a  4620              MOV      r0,r4
00001c  f7fffffe          BL       uart_rx_idle_callback
                  |L5.32|
;;;73     	}
;;;74     }
000020  bd10              POP      {r4,pc}
;;;75     void Remote_Init(void)
                          ENDP


                          AREA ||i.uart_rx_idle_callback||, CODE, READONLY, ALIGN=2

                  uart_rx_idle_callback PROC
;;;52     }
;;;53     static void uart_rx_idle_callback(UART_HandleTypeDef* huart)
000000  b518              PUSH     {r3,r4,lr}
;;;54     {
000002  4604              MOV      r4,r0
;;;55     	__HAL_UART_CLEAR_IDLEFLAG(huart);
000004  bf00              NOP      
000006  2000              MOVS     r0,#0
000008  9000              STR      r0,[sp,#0]
00000a  6820              LDR      r0,[r4,#0]
00000c  6800              LDR      r0,[r0,#0]
00000e  9000              STR      r0,[sp,#0]
000010  6820              LDR      r0,[r4,#0]
000012  6840              LDR      r0,[r0,#4]
000014  9000              STR      r0,[sp,#0]
000016  bf00              NOP      
000018  bf00              NOP      
;;;56     	if (huart == &DBUS_HUART)
00001a  4812              LDR      r0,|L6.100|
00001c  4284              CMP      r4,r0
00001e  d11f              BNE      |L6.96|
;;;57     	{
;;;58     		__HAL_DMA_DISABLE(huart->hdmarx);
000020  6b60              LDR      r0,[r4,#0x34]
000022  6800              LDR      r0,[r0,#0]
000024  6800              LDR      r0,[r0,#0]
000026  f0200001          BIC      r0,r0,#1
00002a  6b61              LDR      r1,[r4,#0x34]
00002c  6809              LDR      r1,[r1,#0]
00002e  6008              STR      r0,[r1,#0]
;;;59     		if ((DBUS_MAX_LEN - dma_current_data_counter(huart->hdmarx->Instance)) == DBUS_BUFLEN)
000030  6b61              LDR      r1,[r4,#0x34]
000032  6808              LDR      r0,[r1,#0]
000034  f7fffffe          BL       dma_current_data_counter
000038  f1c00032          RSB      r0,r0,#0x32
00003c  2812              CMP      r0,#0x12
00003e  d103              BNE      |L6.72|
;;;60     		{
;;;61     			rc_callback_handler(&Remote, dbus_buf);	
000040  4909              LDR      r1,|L6.104|
000042  480a              LDR      r0,|L6.108|
000044  f7fffffe          BL       rc_callback_handler
                  |L6.72|
;;;62     		}
;;;63     		__HAL_DMA_SET_COUNTER(huart->hdmarx, DBUS_MAX_LEN);
000048  2032              MOVS     r0,#0x32
00004a  6b61              LDR      r1,[r4,#0x34]
00004c  6809              LDR      r1,[r1,#0]
00004e  6048              STR      r0,[r1,#4]
;;;64     		__HAL_DMA_ENABLE(huart->hdmarx);
000050  6b60              LDR      r0,[r4,#0x34]
000052  6800              LDR      r0,[r0,#0]
000054  6800              LDR      r0,[r0,#0]
000056  f0400001          ORR      r0,r0,#1
00005a  6b61              LDR      r1,[r4,#0x34]
00005c  6809              LDR      r1,[r1,#0]
00005e  6008              STR      r0,[r1,#0]
                  |L6.96|
;;;65     	}
;;;66     }
000060  bd18              POP      {r3,r4,pc}
;;;67     void uart_receive_handler(UART_HandleTypeDef *huart)
                          ENDP

000062  0000              DCW      0x0000
                  |L6.100|
                          DCD      huart1
                  |L6.104|
                          DCD      dbus_buf
                  |L6.108|
                          DCD      Remote

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  dbus_buf
                          %        18
                  Remote
                          %        10

;*** Start embedded assembler ***

#line 1 "App\\Remote.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_Remote_c_7dd0af51____REV16|
#line 388 ".\\CORE\\cmsis_armcc.h"
|__asm___8_Remote_c_7dd0af51____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_Remote_c_7dd0af51____REVSH|
#line 402
|__asm___8_Remote_c_7dd0af51____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___8_Remote_c_7dd0af51____RRX|
#line 587
|__asm___8_Remote_c_7dd0af51____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
